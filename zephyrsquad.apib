FORMAT: 1A
HOST: https://prod-api.zephyr4jiracloud.com/connect

# Zephyr Squad Cloud REST API


Zephyr Squad Cloud REST API allows to access test assets.


Authentication: Use JWT authentication for Zephyr REST API authentication, provide Zephyr AccessKey and secretkey. Zephyr server responds
with a cookie containing acpt token. Please use cookies for authentication.

Note: JWT authentication requires username, accountId(OPTIONAL) and tenantId to generate accessKey and secretKey.

If you use custom JWT generator, please use the following context as JWT claim, Since accountId is mandatory field:
<br />
&nbsp;&nbsp;{<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"context": {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"user": {<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"accountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234"
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
<br />}<br />
JWT Reference: https://developer.atlassian.com/cloud/jira/platform/understanding-jwt/

More details: https://support.smartbear.com/zephyr-squad-cloud-v1/docs/en/zephyr-squad-cloud-rest-api/generating-a-jwt-authentication-token-for-zephyr-squad-cloud-api.html


# Group Attachment
Attachment Resource

## Get Execution Attachment list  [/public/rest/api/1.0/attachment/search/execution{?projectId,issueId,entityId}]
### Get Execution Attachment list  [GET]
Returns list of attachment meta-data associated to the execution.
 


+ Parameters
    + projectId (required,  String) ... projectId of Attachment
    + issueId (required,  String) ... issueId of Attachment
    + entityId (required,  String) ... entityId of Attachment


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"id":"0001479249374815-fa312653ffffd5ee-0001","name":"YouTube-Channel-Art.jpg","fileExtension":"jpg","createDate":"11-15-2016 14:36:14","createdBy":"admin","createdByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","size":214226,"comment":"","entityId":"0001479156054097-4676fceeffffec4c-0001","entityType":"execution","cycleId":"0001479155955288-4676fceeffffec4c-0001","versionId":-1,"ztIdIndex":"0001477932565262-320cc225ffffcb40-0001","createDateLong":1479249374803}]


## Get Attachment thumbnail  [/public/rest/api/1.0/attachment/{attachmentId}/thumbnail{?projectId,issueId}]
### Get Attachment thumbnail  [GET]
 Retrieves attachment's thumbnail by attachmentId  


+ Parameters
    + projectId (required,  String) ... projectId of Attachment
    + issueId (required,  String) ... issueId of Attachment
    + attachmentId (required,  String) ... attachmentId of Attachment


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        File


## Get Teststep Attachment list   [/public/rest/api/1.0/attachment/search/teststep{?projectId,issueId,entityId}]
### Get Teststep Attachment list   [GET]
Returns attachment meta-data associated to the list of Teststep.
 


+ Parameters
    + projectId (required,  String) ... projectId of Attachment
    + issueId (required,  String) ... issueId of Attachment
    + entityId (required,  String) ... entityId of Attachment


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"id":"0001479249374815-fa312653ffffd5ee-0001","name":"YouTube-Channel-Art.jpg","fileExtension":"jpg","createDate":"11-15-2016 14:36:14","createdBy":"admin","createdByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","size":214226,"comment":"","entityId":"0001479156054097-4676fceeffffec4c-0001","entityType":"execution","cycleId":"0001479155955288-4676fceeffffec4c-0001","versionId":-1,"ztIdIndex":"0001477932565262-320cc225ffffcb40-0001","createDateLong":1479249374803}]
        

## Get StepResult Attachment list   [/public/rest/api/1.0/attachment/search/stepresult{?projectId,issueId}]
### Get StepResult Attachment list   [POST]
Returns attachment meta-data associated to the list of Step Result(s).
 

+ Parameters
    + projectId (required,  String) ... projectId of Attachment
    + issueId (required,  String) ... issueId of Attachment

+ Request ()
stepResultId=0001484157590227-242ac112-0001&stepResultId=0001484157590200-242ac112-0001
        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"0001479249470823-fa312653ffffd5ee-0001":[],"0001479249470841-fa312653ffffd5ee-0001":[{"id":"0001479249877899-fa312653ffffd5ee-0001","ztId":"0001477932565262-320cc225ffffcb40-0001","name":"a.jpg","fileExtension":"jpg","createDate":"11-15-2016 14:44:37","createdBy":"admin","createdByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","size":102940,"comment":"","entityId":"0001479249470841-fa312653ffffd5ee-0001","entityType":"stepresult","cycleId":"0001479152878248-4676fceeffffec4c-0001","versionId":-1,"ztIdIndex":"0001477932565262-320cc225ffffcb40-0001","createDateLong":1479249877706}]}


## Create Attachment  [/public/rest/api/1.0/attachment{?issueId,versionId,entityName,cycleId,entityId,comment,projectId}]
### Create Attachment  [POST]
 Add one or more attachments to an entity (execution/stepResult). This resource expects a multipart post.  The media-type multipart/form-data is defined in RFC 1867. Most client libraries have classes that make dealing with multipart posts simple.  For instance, in Java the Apache HTTP Components library provides a MultiPartEntity that makes it simple to submit a multipart POST. 
 <table> <thead> <tr> <th>Parameter</th> <th>Type</th> <th>Value</th> <th>Required</th> </tr> </thead> <tbody> <tr> <td>projectId</td> <td>Long</td> <td>10000</td> <td>Y</td> </tr> <tr> <td>versionId</td> <td>Long</td> <td>10001</td> <td>Y</td> </tr> <tr> <td>issueId</td> <td>Long</td> <td>10047</td> <td>Y</td> </tr> <tr> <td>entityName</td> <td>String</td> <td>execution/stepResult</td> <td>Y</td> </tr> <tr> <td>cycleId</td> <td>String</td> <td>0001579842076001-42e2be69451-0001</td> <td>Y</td> </tr> <tr> <td>entityId</td> <td>String</td> <td>0001479842076551-42e2be69451-0001</td> <td>Y</td> </tr> <tr> <td>comment</td> <td>String</td> <td>Sample comment</td> <td>N</td> </tr> </tbody></table> 


+ Parameters
    + issueId (required,  String) ... issueId of Attachment
    + versionId (required,  Long) ... versionId of Attachment
    + entityName (required,  String) ... entityName of Attachment
    + cycleId (required,  String) ... cycleId of Attachment
    + entityId (required,  String) ... entityId of Attachment
    + comment (required,  String) ... comment of Attachment
    + projectId (required,  String) ... projectId of Attachment


+ Request (multipart/form-data)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"id":"0001479249223490-fa312653ffffd5ee-0001","ztId":"0001477932565262-320cc225ffffcb40-0001","name":"amazon-order-wrong.pdf","fileExtension":"pdf","createDate":"11-15-2016 14:33:43","createdBy":"admin","createdByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","size":156039,"comment":"","entityId":"0001479156054097-4676fceeffffec4c-0001","entityType":"execution","cycleId":"0001479155955288-4676fceeffffec4c-0001","versionId":-1,"ztIdIndex":"0001477932565262-320cc225ffffcb40-0001","createDateLong":1479249223250}]


## Get and Delete Attachment image  [/public/rest/api/1.0/attachment/{attachmentId}{?projectId,issueId}]
### Get Attachment image  [GET]
 Retrieves attachment meta-data by attachmentId  


+ Parameters
    + projectId (required,  String) ... projectId of Attachment
    + issueId (required,  String) ... issueId of Attachment
    + attachmentId (required,  String) ... attachmentId of Attachment


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        File


### Delete Attachment  [DELETE]
 Deletes the attachment by attachmentId  


+ Parameters
    + projectId (required,  String) ... projectId of Attachment
    + issueId (required,  String) ... issueId of Attachment
    + attachmentId (required,  String) ... attachmentId of Attachment


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"message":"attachment 0001481796768777-242ac112-0001 successfully deleted","timestamp":"2016-12-15"}



# Group Chart
Chart Resource

## Get Tests created  [/public/rest/api/1.0/chart/tests/created{?daysPrevious,periodName,projectId}]
### Get Tests created  [GET]
 Retrieves data based on duration for Tests created over a period of daily/monthly/yearly on a per project basis. If days and period are both passed in, period value will take precedence over days


+ Parameters
    + daysPrevious (required,  Long) ... daysPrevious of Chart
    + periodName (required,  String) ... periodName of Chart
    + projectId (required,  Long) ... projectId of Chart


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"TestsCreationPeriod":30,"TestsCreationMap":{"1476601200000":0,"1476687600000":0,"1476774000000":0,"1476860400000":0,"1476946800000":0,"1477033200000":0,"1477119600000":0,"1477206000000":0,"1477292400000":0,"1477378800000":0,"1477465200000":0,"1477551600000":0,"1477638000000":0,"1477724400000":0,"1477810800000":0,"1477897200000":27,"1477983600000":0,"1478070000000":32,"1478156400000":2,"1478242800000":0,"1478329200000":0,"1478415600000":0,"1478505600000":0,"1478592000000":0,"1478678400000":0,"1478764800000":1,"1478851200000":0,"1478937600000":0,"1479024000000":0,"1479110400000":0,"1479196800000":0},"TestsCreationCount":62}


## Get Executions created [/public/rest/api/1.0/chart/executions/created{?daysPrevious,periodName,projectId}]
### Get Executions created [GET]
 Retrieves data based on duration for executions performed over a period of monthly/yearly on a per project basis. If days and period are both passed in, period value will take precedence over days


+ Parameters
    + daysPrevious (required,  Long) ... daysPrevious of Chart
    + periodName (required,  String) ... periodName of Chart
    + projectId (required,  Long) ... projectId of Chart


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"data":{"1476601200000":{"total":0,"executed":0},"1476687600000":{"total":0,"executed":0},"1476774000000":{"total":0,"executed":0},"1476860400000":{"total":0,"executed":0},"1476946800000":{"total":0,"executed":0},"1477033200000":{"total":0,"executed":0},"1477119600000":{"total":0,"executed":0},"1477206000000":{"total":0,"executed":0},"1477292400000":{"total":0,"executed":0},"1477378800000":{"total":0,"executed":0},"1477465200000":{"total":0,"executed":0},"1477551600000":{"total":0,"executed":0},"1477638000000":{"total":0,"executed":0},"1477724400000":{"total":0,"executed":0},"1477810800000":{"total":0,"executed":0},"1477897200000":{"total":0,"executed":0},"1477983600000":{"total":0,"executed":0},"1478070000000":{"total":0,"executed":0},"1478156400000":{"total":0,"executed":0},"1478242800000":{"total":0,"executed":0},"1478329200000":{"total":0,"executed":0},"1478415600000":{"total":0,"executed":0},"1478505600000":{"total":0,"executed":0},"1478592000000":{"total":0,"executed":0},"1478678400000":{"total":0,"executed":0},"1478764800000":{"total":0,"executed":0},"1478851200000":{"total":0,"executed":0},"1478937600000":{"total":0,"executed":0},"1479024000000":{"total":0,"executed":0},"1479110400000":{"total":46,"executed":46},"1479196800000":{"total":0,"executed":0}}}



# Group Config
Config Resource

## Get General Configuration  [/public/rest/api/1.0/config/generalinformation]
### Get General Configuration  [GET]
Retrieves General Configuration information about the Test Issue Type. 



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"issueType": {"self": "https://test.atlassian.net/rest/api/2/issuetype/10000","id": 10000, "name": "Test","description": "This JIRA Issue Type is used to create Zephyr Tests.", "iconUri": "https://test.atlassian.net/secure/viewavatar?size=xsmall&avatarId=11001&avatarType=issuetype","subtask":false}}



# Group Cycle
Cycle Resource

## Creates new cycle [/public/rest/api/1.0/cycle{?expand,clonedCycleId}]
### Creates new cycle [POST]
Creates a Cycle from a JSON representation. 
An Adhoc cycle is created by the system and any attempt to create it by a user will be rejected or ignored. 
 If no VersionId is passed in the request, it will be defaulted to an unscheduled version
 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="4"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td><td><strong>Required</strong></td>  </tr> <tr> <td>name</td> <td>String</td> <td>Test Cycle</td><td>Y</td></tr>  <tr> <td>build</td> <td>String</td> <td>build 1.0</td> <td>N</td></tr>  <tr> <td>environment</td> <td>String</td> <td>Bug Fix</td> <td>N</td></tr>  <tr> <td>description</td> <td>String</td> <td>This contains the zephyr tests for a version</td> <td>N</td> </tr> <tr> <td>startDate</td> <td>long</td> <td>1485278607</td> <td>N</td></tr> <tr><td>endDate</td> <td>long</td> <td>1485302400</td> <td>N</td> </tr> <tr> <td>projectId</td> <td>Integer</td> <td>10100</td> <td>Y</td></tr>  <tr> <td>versionId</td> <td>Integer</td> <td>10000</td> <td>Y</td></tr> </tbody></table> 


+ Parameters
    + expand (optional, String) ... expand of Cycle (passing expand=executionSummaries in Query will have Execution Summary for the Cycle in Response)
    + clonedCycleId (optional, String) ... clonedCycleId of Cycle


+ Request (application/json)

    {
      "name": "Test Cycle",
      "build": "1.0",
      "environment": "Bug Fix",
      "description": "This contains the zephyr tests for a version",
      "startDate": "2018-12-15",
      "endDate": "2018-12-22",
      "versionId": 10008,
      "clearCustomFieldsFlag": true,
      "projectId": 10002
    }

    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {
          "totalExecutionTime": null,
          "createdByAccountId": "557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d",
          "endDate": "2018-12-22",
          "tenantKey": "ODdhMjQ4MTktOTkwZC0zZmQ3LTg1ZjEtNTJkYjk2MGUwMDA1",
          "totalExecutions": 0,
          "description": "This contains the zephyr tests for a version",
          "cycleIndex": "6b4becb7-986c-4ddb-9cc0-fa6c83a5eadf",
          "ztId": "fe1c711f-c226-476d-bf40-b8ee71f1e955",
          "createdByDisplayName": "Zephyr TM",
          "totalDefects": null,
          "totalLoggedTimeFormatted": null,
          "action": "collapse",
          "modifiedBy": null,
          "id": "6b4becb7-986c-4ddb-9cc0-fa6c83a5eadf",
          "class": "com.thed.zephyr.connect.vo.GroupedExecutionSummary",
          "executionSummaries": [
            {
              "count": 0,
              "executionStatusKey": -1,
              "executionStatusName": "UNEXECUTED",
              "executionStatusDescription": "The test has not yet been executed.",
              "executionStatusColor": "#A0A0A0"
            },
            {
              "count": 0,
              "executionStatusKey": 1,
              "executionStatusName": "PASS",
              "executionStatusDescription": "Test was executed and passed successfully.",
              "executionStatusColor": "#75B000"
            },
            {
              "count": 0,
              "executionStatusKey": 2,
              "executionStatusName": "FAIL",
              "executionStatusDescription": "Test was executed and failed.",
              "executionStatusColor": "#CC3300"
            },
            {
              "count": 0,
              "executionStatusKey": 3,
              "executionStatusName": "WIP",
              "executionStatusDescription": "Test execution is a work-in-progress.",
              "executionStatusColor": "#F2B000"
            },
            {
              "count": 0,
              "executionStatusKey": 4,
              "executionStatusName": "BLOCKED",
              "executionStatusDescription": "The test execution of this test was blocked for some reason.",
              "executionStatusColor": "#6693B0"
            }
          ],
          "totalLoggedTime": null,
          "offset": "0",
          "modifiedByAccountId": null,
          "totalExecuted": 0,
          "creationDate": "2018-12-15",
          "totalCycleExecuted": 0,
          "projectCycleVersionIndex": "10002_10008",
          "executionsAwaitingLog": null,
          "sprintId": null,
          "environment": "Bug Fix",
          "versionId": 10008,
          "totalCycleExecutions": 0,
          "build": "1.0",
          "createdBy": "admin",
          "name": "Test Cycle",
          "totalExecutionTimeFormatted": null,
          "totalFolders": 0,
          "projectId": 10002,
          "startDate": "2018-12-15"
        }

## Copy Execution to Cycle [/public/rest/api/1.0/cycle/{cycleId}/copy]
### Copy Execution to Cycle [POST]
Copies the selected Execution to the provided Cycle if it belongs to the same project and matches criteria. This API returns a jobprogressTicket which should be used for making the call to /public/rest/api/1.0/jobprogress/:jobProgressTicket. Once the request is processed, the jobProgress will populate the message field with the executions that were successfully copied
 <table border="1" width="100%"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>executions</td> <td>String Array</td> <td>["0001456662091782-5a6ee13a3f6b-0001","0001456662092010-5a6ee13a3f6b-0001"]</td> </tr> <tr> <td>projectId</td> <td>Integer</td> <td>10000</td> </tr> <tr> <td>versionId</td> <td>Integer</td> <td>-1</td> </tr> <tr> <td>clearDefectMappingFlag</td> <td>Boolean</td> <td>true</td> </tr> <tr> <td>clearStatusFlag</td> <td>Boolean</td> <td>true</td> </tr> <tr> <td>clearAssignmentsFlag</td> <td>Boolean</td> <td>true</td> </tr> </tbody> </table>  


+ Parameters
    + cycleId (required,  String) ... cycleId of Cycle


+ Request (application/json)

        {"executions":["0001479277915060-fa312653ffffd5ee-0001","0001479365053023-725f24aeffff8568-0001","0001479405945581-725f24aeffff8568-0001","0001479515644605-62ad9af21f8b-0001","0001479515645098-62ad9af21f8b-0001","0001479517127726-62ad9af21f8b-0001","0001479517128256-62ad9af21f8b-0001","0001479517128426-62ad9af21f8b-0001"],"projectId":10000,"versionId":-1,"clearDefectMappingFlag":true,"clearStatusFlag":true,"clearAssignmentsFlag":true}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/text)

        0001456662339082-5a6ee13a3f6b-0001


## Update Cycle [/public/rest/api/1.0/cycle/{cycleId}]
### Update Cycle [PUT]
Updates the specified Cycle from a JSON representation.<table width="100%" border="1"> <tbody> <tr> <td colspan="4"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td><td><strong>Required</strong></td> </tr> <tr><td>name</td> <td>String</td> <td>Update Cycle</td><td>Y</td></tr> <tr> <td>build</td> <td>String</td> <td>build 2.0</td><td>N</td></tr> <tr> <td>environment</td> <td>String</td> <td>Bug Fix</td><td>N</td> </tr> <tr><td>description</td> <td>String</td> <td>This contains the zephyr tests for a version</td><td>N</td></tr> <tr> <td>startDate</td> <td>long</td> <td>1485278607</td><td>N</td></tr> <tr><td>endDate</td> <td>long</td> <td>1485302400</td><td>N</td></tr> <tr> <td>projectId</td> <td>Integer</td> <td>10100</td><td>Y</td> </tr> <tr> <td>versionId</td> <td>Integer</td> <td>10000</td> <td>Y</td></tr> </tbody></table> 


+ Parameters
    + cycleId (required,  String) ... cycleId of Cycle


+ Request (application/json)

        {
          "name": "Test Cycle",
          "build": "1.1",
          "environment": "Bug Fix",
          "description": "This contains the zephyr tests for a version",
          "startDate": "2018-12-15",
          "endDate": "2018-12-22",
          "versionId": 10008,
          "clearCustomFieldsFlag": true,
          "projectId": 10002,
          "id": "6b4becb7-986c-4ddb-9cc0-fa6c83a5eadf",
          "sprintId": null
        }

    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {
          "totalExecutionTime": null,
          "createdByAccountId": "557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d",
          "endDate": "2018-12-22",
          "tenantKey": "ODdhMjQ4MTktOTkwZC0zZmQ3LTg1ZjEtNTJkYjk2MGUwMDA1",
          "totalExecutions": 0,
          "description": "This contains the zephyr tests for a version",
          "cycleIndex": "6b4becb7-986c-4ddb-9cc0-fa6c83a5eadf",
          "ztId": "fe1c711f-c226-476d-bf40-b8ee71f1e955",
          "createdByDisplayName": "Zephyr TM",
          "totalDefects": null,
          "totalLoggedTimeFormatted": null,
          "action": "collapse",
          "modifiedBy": "admin",
          "id": "6b4becb7-986c-4ddb-9cc0-fa6c83a5eadf",
          "class": "com.thed.zephyr.connect.vo.GroupedExecutionSummary",
          "executionSummaries": [
            {
              "count": 0,
              "executionStatusKey": -1,
              "executionStatusName": "UNEXECUTED",
              "executionStatusDescription": "The test has not yet been executed.",
              "executionStatusColor": "#A0A0A0"
            },
            {
              "count": 0,
              "executionStatusKey": 1,
              "executionStatusName": "PASS",
              "executionStatusDescription": "Test was executed and passed successfully.",
              "executionStatusColor": "#75B000"
            },
            {
              "count": 0,
              "executionStatusKey": 2,
              "executionStatusName": "FAIL",
              "executionStatusDescription": "Test was executed and failed.",
              "executionStatusColor": "#CC3300"
            },
            {
              "count": 0,
              "executionStatusKey": 3,
              "executionStatusName": "WIP",
              "executionStatusDescription": "Test execution is a work-in-progress.",
              "executionStatusColor": "#F2B000"
            },
            {
              "count": 0,
              "executionStatusKey": 4,
              "executionStatusName": "BLOCKED",
              "executionStatusDescription": "The test execution of this test was blocked for some reason.",
              "executionStatusColor": "#6693B0"
            }
          ],
          "totalLoggedTime": null,
          "offset": "0",
          "modifiedByAccountId": "557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d",
          "totalExecuted": 0,
          "creationDate": null,
          "totalCycleExecuted": 0,
          "projectCycleVersionIndex": "10002_10008",
          "executionsAwaitingLog": null,
          "sprintId": null,
          "environment": "Bug Fix",
          "versionId": 10008,
          "totalCycleExecutions": 0,
          "build": "1.1",
          "createdBy": "admin",
          "name": "Test Cycle",
          "totalExecutionTimeFormatted": null,
          "totalFolders": 0,
          "projectId": 10002,
          "startDate": "2018-12-15"
        }
        
        
## Export Cycle  [/public/rest/api/1.0/cycle/{cycleId}/export{?versionId,exportType,projectId,folderId}]
### Export Cycle  [GET]
Export's Cycle for the given Project/Version/Cycle in HTML/CSV/XML. This API returns a jobprogressTicket which should be used for making the call to /public/rest/api/1.0/jobprogress/:jobProgressTicket. Once the request is processed, the jobProgress will populate the summaryMessage field with the fileName which should than be passed in to /public/rest/api/1.0/cycle/export/download/:fileName to download the file.


+ Parameters
    + versionId (required,  Long) ... versionId of Cycle
    + exportType (required,  String) ... exportType of Cycle
    + cycleId (required,  String) ... cycleId of Cycle
    + projectId (required,  Long) ... projectId of Cycle
    + folderId (optional, String) ... folderId of Cycle


+ Request (application/json)



    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (text/plain)



## Delete Cycle  [/public/rest/api/1.0/cycle/{cycleId}{?versionId,projectId}]
### Delete Cycle  [DELETE]
Deletes the Cycle. All the entities including executions will be deleted along with the cycle 


+ Parameters
    + versionId (required,  Long) ... versionId of Cycle
    + cycleId (required,  String) ... cycleId of Cycle
    + projectId (required,  Long) ... projectId of Cycle


+ Request (application/json)

        {"projectId":10202,"versionId":"-1,10308","cycleId":"0001479126116358-242ac112-0001"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"message":"cycle 0001481790025653-242ac112-0001 successfully deleted","timestamp":"2016-12-15"}


## Move Execution by Cycle [/public/rest/api/1.0/cycle/{cycleId}/move]
### Move Execution by Cycle [POST]
Move the execution from one cycle to another if it belongs to the same project. If the execution is copied to the non-adhoc cycle, it will be moved only if the testcase was not added to that cycle. This API returns a jobprogressTicket which should be used for making the call to /public/rest/api/1.0/jobprogress/:jobProgressTicket. Once the request is processed, the jobProgress will populate the message field with the executions that were successfully moved 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"> <b>JSON Object Details</b> </td> </tr> <tr> <td><b>Parameters</b></td> <td><b>Type</b></td> <td><b>Value</b></td> </tr> <tr> <td>executions</td> <td>String Array</td> <td>[&quot;0001456662091782-5a6ee13a3f6b-0001&quot;,&quot;0001456662092010-5a6ee13a3f6b-0001&quot;]</td> </tr> <tr> <td>projectId</td> <td>Integer</td> <td>10000</td> </tr> <tr> <td>versionId</td> <td>Integer</td> <td>-1</td> </tr> <tr> <td>clearDefectMappingFlag</td> <td>Boolean</td> <td>true</td> </tr> <tr> <td>clearStatusFlag</td> <td>Boolean</td> <td>true</td> </tr> <tr> <td>clearAssignmentsFlag</td> <td>Boolean</td> <td>true</td> </tr> </tbody></table>  


+ Parameters
    + cycleId (required,  String) ... cycleId of Cycle


+ Request (application/json)

        {"executions":["0001456662091782-5a6ee13a3f6b-0001","0001456662092010-5a6ee13a3f6b-0001"],"projectId":10000,"versionId":-1,"clearDefectMappingFlag":true,"clearStatusFlag":true,"clearAssignmentsFlag":true}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/text)

        0001456662339082-5a6ee13a3f6b-0001


## Export cycle download [/public/rest/api/1.0/cycle/export/download/{fileName}]
### Export cycle download [GET]
Downloads the file with Execution/Cycle/TestStep/StepResult data. 


+ Parameters
    + fileName (required,  String) ... fileName of Cycle


+ Request (application/json)



    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/x-download)



## Get List of Cycles  [/public/rest/api/1.0/cycles/search{?versionId,expand,projectId}]
### Get List of Cycles  [GET]
Returns a list of cycle(s) and an expandos driven executionSummaries for each cycle for a given project and version along with grouped executions. 


+ Parameters
    + versionId (required,  Long) ... versionId of Cycle
    + expand (optional, String) ... expand of Cycle (expand=executionSummaries will return Execution Summary for each cycle)
    + projectId (required,  Long) ... projectId of Cycle


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [
          {
            "action": "expand",
            "build": "1.0",
            "class": "com.thed.zephyr.connect.vo.GroupedExecutionSummary",
            "createdBy": "admin",
            "createdByDisplayName": "admin",
            "createdByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
            "cycleIndex": "0001513838430954-242ac112-0001",
            "description": "Test Manual Cycle",
            "endDate": "2017-12-22",
            "environment": "QA",
            "executionSummaries": [
              {
                "count": 2,
                "executionStatusColor": "#A0A0A0",
                "executionStatusDescription": "The test has not yet been executed.",
                "executionStatusKey": -1,
                "executionStatusName": "UNEXECUTED"
              }
            ],
            "id": "0001513838430954-242ac112-0001",
            "modifiedBy": "admin",
            "modifiedByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
            "name": "Manual Cycle",
            "offset": "0",
            "projectCycleVersionIndex": "10930_12829",
            "projectId": 10930,
            "sprintId": null,
            "startDate": "2017-12-18",
            "totalCycleExecuted": 0,
            "totalCycleExecutions": 0,
            "totalDefects": 0,
            "totalExecuted": 0,
            "totalExecutions": 2,
            "totalFolders": 2,
            "versionId": 12829
          },
          {
            "action": "collapse",
            "build": "b1",
            "class": "com.thed.zephyr.connect.vo.GroupedExecutionSummary",
            "createdBy": "admin",
            "createdByDisplayName": "admin",
            "createdByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
            "cycleIndex": "0001513839053908-242ac112-0001",
            "description": "Test Regression Cycle",
            "endDate": "2017-12-22",
            "environment": "Staging",
            "executionSummaries": [
              {
                "count": 4,
                "executionStatusColor": "#A0A0A0",
                "executionStatusDescription": "The test has not yet been executed.",
                "executionStatusKey": -1,
                "executionStatusName": "UNEXECUTED"
              }
            ],
            "id": "0001513839053908-242ac112-0001",
            "modifiedBy": "tester",
            "modifiedByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
            "name": "Regression Cycle",
            "offset": "0",
            "projectCycleVersionIndex": "10930_12829",
            "projectId": 10930,
            "sprintId": null,
            "startDate": "2017-12-18",
            "totalCycleExecuted": 0,
            "totalCycleExecutions": 2,
            "totalDefects": 0,
            "totalExecuted": 0,
            "totalExecutions": 4,
            "totalFolders": 2,
            "versionId": 12829
          }
        ]

## Get Cycle  [/public/rest/api/1.0/cycle/{cycleId}{?versionId,expand,projectId}]
### Get Cycle  [GET]
Returns a full representation of the Cycle for the given version.
 An Cycle JSON consists of the cycle details and an expandos driven executionSummaries for the cycle. 


+ Parameters
    + versionId (required,  Long) ... versionId of Cycle
    + expand (optional, String) ... expand of Cycle
    + cycleId (required,  String) ... cycleId of Cycle
    + projectId (required,  Long) ... projectId of Cycle


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {
          "folders": {
            "modifiedTime": null,
            "tenantKey": "amlyYTozNDBmMjc0ZS0wZTkxLTRmZTktYWZjNy05YzE5MmNlODk3YWY=",
            "cycleId": "0001515705175488-242ac112-0001",
            "description": "",
            "ztId": "0001448076145258-242ac116-0001",
            "sprintId": null,
            "versionId": 10005,
            "createdBy": "admin",
            "name": "Test Folder",
            "createdTime": 1515705650130,
            "modifiedBy": null,
            "id": "0001515705650130-242ac112-0001",
            "class": "com.thed.zephyr.connect.model.nosql.Folder",
            "projectId": 10001
          },
          "tenantKey": "amlyYTozNDBmMjc0ZS0wZTkxLTRmZTktYWZjNy05YzE5MmNlODk3YWY=",
          "endDate": null,
          "description": "",
          "cycleIndex": "0001515705175488-242ac112-0001",
          "ztId": "0001448076145258-242ac116-0001",
          "projectCycleVersionIndex": "10001_10005",
          "createdByDisplayName": "admin",
          "sprintId": null,
          "environment": "",
          "versionId": 10005,
          "build": "",
          "createdBy": "admin",
          "createdByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
          "name": "Test Cycle",
          "modifiedBy": "admin",
          "modifiedByAccountId": "223456:1234abcd-1234-abcd-1234-1234abcd1234",
          "totalFolders": 1,
          "id": "0001515705175488-242ac112-0001",
          "class": "com.thed.zephyr.connect.model.nosql.Cycle",
          "projectId": 10001,
          "startDate": null
        }


# Group Execution
Execution Resource

## Get List of Executions  [/public/rest/api/1.0/executions/search{?executionId}]
### Get List of Executions  [POST]
Retrieves the execution based on the ZQL. The response of this API is paginated. It will return a max of 50 executions and  will also return the totalCount of executions that ZQL returns, so that one could change the offset accordingly and make paginated calls to this API. 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>maxRecords</td> <td>Integer</td> <td>20</td> </tr> <tr> <td>offset</td> <td>Integer</td> <td>0</td> </tr> <tr> <td>zql</td> <td>String</td> <td>field = \&quot;value\&quot;</td> </tr> </tbody></table> 


+ Parameters
    + executionId (required,  String) ... executionId of Execution


+ Request (application/json)

        {"maxRecords":20,"offset":0,"zql":"field = "value"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"currentOffset":13,"prevExecution":{"issueId":10005,"id":"0001489061661878-242ac112-0001","projectId":10000},"totalCount":14,"nextExecution":{"issueId":10007,"id":"0001489061662475-242ac112-0001","projectId":10000}}


## Delete Execution  [/public/rest/api/1.0/execution/{executionId}{?issueId}]
### Delete Execution  [DELETE]
Delete an execution. 
 Deleting an execution will also delete the associated attachments/stepresults and will remove the defect remote links. 


+ Parameters
    + executionId (required,  String) ... executionId of Execution
    + issueId (required,  Long) ... issueId of Execution


+ Request (application/json)



    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)
    
        {"message": "execution 0001481629322884-242ac112-0001 successfully deleted","timestamp": "2016-12-14"}


## Export Executions  [/public/rest/api/1.0/executions/export]
### Export Executions  [POST]
Exports the execution(s) based on the ZQL and the executions selected. It is mandatory to send the ZQL with the request. This API returns a jobprogressTicket which should be used for making the call to /public/rest/api/1.0/jobprogress/:jobProgressTicket. 
 Once the request is processed, the jobProgress will populate the summaryMessage field with the fileName which should than be passed in to /public/rest/api/1.0/cycle/export/download/:fileName to download the file 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="4"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td><td><strong>Required</strong></td> </tr> <tr> <td>exportType</td> <td>String</td> <td>xml/html/csv</td><td>Y</td> </tr><tr> <td>expand</td> <td>String</td> <td>teststeps</td><td>N</td></tr> <tr> <td>executions</td> <td>String Array</td> <td>[&quot;0001456662092010-5a6ee13a3f6b-0001&quot;]</td><td>Y</td> </tr> <tr> <td>startIndex</td> <td>Integer</td> <td>0</td> <td>N</td></tr> <tr> <td>maxAllowed</td> <td>Boolean</td> <td>true</td><td>N</td> </tr> <tr> <td>zqlQuery</td> <td>String</td> <td>&quot;&quot;</td> <td>Y</td></tr> </tbody></table> 



+ Request (application/json)

        {"exportType":"xml","expand":"teststeps","executions":["0001456662092010-5a6ee13a3f6b-0001"],"startIndex":0,"maxAllowed":true,"zqlQuery":"project=TST"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (text/plain)

        0001456663770473-5a6ee13a3f6b-0001


## Get List of Executions  [/public/rest/api/1.0/executions{?issueId,offset,size,projectId}]
### Get List of Executions  [GET]
Retrieves execution(s) based on the passed in parameters. 
 Executions are fetched in a paginated fashion in a batch of 50. Users can use the offset and totalCount parameters to make a paginated call to retrieve all executions. 


+ Parameters
    + issueId (required,  Long) ... issueId of Execution
    + offset (optional, Integer) ... offset of Execution
    + size (optional, Integer) ... size of Execution
    + projectId (required,  Long) ... projectId of Execution


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {
          "execution": {
            "execution": {
              "id": "0001456664462103-5a6ee13a3f6b-0001",
              "issueId": 10000,
              "versionId": -1,
              "projectId": 10000,
              "cycleId": "0001456664262308-5a6ee13a3f6b-0001",
              "orderId": 1,
              "executedBy": "admin",
              "executedByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
              "executedOn": "02-28-2016 05:03:57",
              "modifiedBy": "admin",
              "modifiedByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
              "createdBy": "admin",
              "createdByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
              "status": {
                "name": "PASS",
                "id": 1,
                "description": "Test was executed and passed successfully.",
                "color": "#75B000",
                "type": 0
              },
              "cycleName": "aaaa",
              "defects": [
                {
                  "id": 10001,
                  "key": "TEST-2",
                  "summary": "BBB",
                  "status": {
                    "self": "http://192.168.1.68:2990/jira/rest/api/2/status/10000",
                    "name": "To Do",
                    "id": 10000,
                    "description": "",
                    "iconUrl": "http://192.168.1.68:2990/jira/images/icons/status_generic.gif"
                  }
                }
              ],
              "stepDefects": [],
              "executionDefectCount": 1,
              "stepDefectCount": 0,
              "totalDefectCount": 1,
              "tenantKey": "amlyYTphN2VkOTUxZi1lZjg5LTQ0ZDktODJlZi1mMjM4YjRkY2FiN2I=",
              "creationDate": "02-28-2016 05:01:02",
              "issueIndex": 10000,
              "projectCycleVersionIndex": "10000_0001456664262308-5a6ee13a3f6b-0001_-1",
              "executionStatusIndex": 1,
              "projectIssueCycleVersionIndex": "10000_10000_0001456664262308-5a6ee13a3f6b-0001_-1"
            },
            "issueKey": "TEST-1",
            "issueLabel": "",
            "component": "",
            "issueSummary": "Test Scheduler",
            "projectName": "Test",
            "versionName": "Unscheduled",
            "priority": "Medium",
            "executedByDisplayName": "admin",
            "testStepBeans": null,
            "defectsAsString": "",
            "projectKey": "TEST"
          },
          "executionStatus": {
            "1": {
              "name": "PASS",
              "id": 1,
              "description": "Test was executed and passed successfully.",
              "color": "#75B000",
              "type": 0
            },
            "2": {
              "name": "FAIL",
              "id": 2,
              "description": "Test was executed and failed.",
              "color": "#CC3300",
              "type": 0
            },
            "3": {
              "name": "WIP",
              "id": 3,
              "description": "Test execution is a work-in-progress.",
              "color": "#F2B000",
              "type": 0
            },
            "4": {
              "name": "BLOCKED",
              "id": 4,
              "description": "The test execution of this test was blocked for some reason.",
              "color": "#6693B0",
              "type": 0
            },
            "-1": {
              "name": "UNEXECUTED",
              "id": -1,
              "description": "The test has not yet been executed.",
              "color": "#A0A0A0",
              "type": 0
            }
          }
        }


## Get List of Linked Executions To Issue [/public/rest/api/1.0/executions/search/issue/{issueIdOrKey}{?maxRecords,expand,offset,action}]
### Get List of Linked Executions To Issue [GET]
Gets execution(s) of the linked tests of the isuue 


+ Parameters
    + maxRecords (optional,  Integer ) ... maxRecords of Execution
    + expand (optional,  String) ... expand of Execution
    + offset (optional, Integer) ... offset of Execution
    + issueIdOrKey (required,  String) ... issueIdOrKey of Execution
    + action (required,  String) ... action of Execution


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {
          "totalExecutionCount": 10,
          "currentOffset": 1,
          "executionStatus": [
            {
              "name": "UNEXECUTED",
              "id": -1,
              "description": "The test has not yet been executed.",
              "color": "#A0A0A0",
              "type": 0
            },
            {
              "name": "PASS",
              "id": 1,
              "description": "Test was executed and passed successfully.",
              "color": "#75B000",
              "type": 0
            },
            {
              "name": "FAIL",
              "id": 2,
              "description": "Test was executed and failed.",
              "color": "#CC3300",
              "type": 0
            },
            {
              "name": "WIP",
              "id": 3,
              "description": "Test execution is a work-in-progress.",
              "color": "#EEAA23",
              "type": 0
            },
            {
              "name": "BLOCKED",
              "id": 4,
              "description": "The test execution of this test was blocked for some reason.",
              "color": "#6693B0",
              "type": 0
            }
          ],
          "stepExecutionStatus": [
            {
              "name": "UNEXECUTED",
              "id": -1,
              "description": "The test has not yet been executed.",
              "color": "#A0A0A0",
              "type": 0
            },
            {
              "name": "FAIL",
              "id": 2,
              "description": "Test was executed and failed.",
              "color": "#E4230D",
              "type": 0
            }
          ],
          "totalCount": 1,
          "searchObjectList": [
            {
              "warningMessage": null,
              "originMessage": null,
              "execution": {
                "id": "0001481178939686-242ac112-0001",
                "issueId": 12800,
                "versionId": -1,
                "projectId": 11300,
                "cycleId": "-1",
                "orderId": 1,
                "executedBy": "admin",
                "executedByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
                "executedOn": "12-08-2016 12:40:16",
                "modifiedBy": "admin",
                "modifiedByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
                "createdBy": "admin",
                "createdByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
                "status": {
                  "name": "!@#$%^&",
                  "id": 7,
                  "description": "",
                  "color": "#C41440",
                  "type": 1
                },
                "cycleName": "Ad hoc",
                "defects": [
                  {
                    "id": 13098,
                    "key": "DAT-7",
                    "summary": "bgh",
                    "status": {
                      "self": "https://demo.atlassian.net/rest/api/2/status/10001",
                      "name": "Done",
                      "id": 10001,
                      "description": "",
                      "iconUrl": "https://demo.atlassian.net/"
                    },
                    "resolution": {
                      "self": "https://demo.atlassian.net/rest/api/2/resolution/10000",
                      "name": "Done",
                      "id": 10000,
                      "description": "Work has been completed on this issue."
                    }
                  }
                ],
                "stepDefects": [],
                "executionDefectCount": 1,
                "stepDefectCount": 0,
                "totalDefectCount": 1,
                "creationDate": "12-08-2016 12:05:39",
                "issueKey": "DAT-1",
                "issueLabel": "",
                "component": "Product",
                "issueSummary": "Application Launch Fails",
                "issueDescription": "",
                "projectName": "Zephyr TM",
                "versionName": "Release 1.0",
                "priority": "Medium",
                "executedByDisplayName": {
                  "defined": true,
                  "orNull": "admin [Administrator]",
                  "empty": false
                },
                "assigneeType": null,
                "assignedToDisplayName": "Zephyr QA",
                "testStepBeans": null,
                "defectsAsString": "",
                "projectKey": "ZEP"
              }
            }
          ]
        }

## Update Execution [/public/rest/api/1.0/execution/{executionId}]
### Update Execution [PUT]
Updates the specified execution from a JSON representation. This API can do the following updates: 
  <ol><li>Assign Execution to a user using the assigneeType field. assigneeType can be currentUser/assignee. In order to change an assignee, one will have to pass in the changeAssignee flag </li> <li>Associate defects to an execution. </li> <li>Update comment for the execution.</li></ol> 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="4"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>status</td> <td>Object</td> <td>{&quot;id&quot;:1}</td> </tr> <tr> <td>id</td> <td>String</td> <td>0001456664462103-5a6ee13a3f6b-0001</td> <td>N</td></tr> <tr> <td>projectId</td> <td>Integer</td> <td>10000</td> <td>Y</td></tr> <tr> <td>issueId</td> <td>Integer</td> <td>10000</td> <td>Y</td></tr> <tr> <td>cycleId</td> <td>String</td> <td>0001456664262308-5a6ee13a3f6b-0001</td> <td>Y</td></tr> <tr> <td>versionId</td> <td>Integer</td> <td>-1</td> <td>Y</td></tr> </tbody></table> 


+ Parameters
    + executionId (required,  String) ... executionId of Execution


+ Request (application/json)

        {"status":{"id":1},"id":"0001456664462103-5a6ee13a3f6b-0001","projectId":10000,"issueId":10000,"cycleId":"0001456664262308-5a6ee13a3f6b-0001","versionId":-1,"comment":"Comment for execution","defects":"["IZ-1","IZ-2"]","assigneeType":"currentUser/assignee","assignee":"userKey"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {
          "execution": {
            "id": "0001456664462103-5a6ee13a3f6b-0001",
            "issueId": 10000,
            "versionId": -1,
            "projectId": 10000,
            "cycleId": "0001456664262308-5a6ee13a3f6b-0001",
            "orderId": 1,
            "executedBy": "admin",
            "executedByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
            "executedOn": "02-28-2016 05:03:57",
            "modifiedBy": "admin",
            "modifiedByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
            "createdBy": "admin",
            "createdByAccountId": "123456:1234abcd-1234-abcd-1234-1234abcd1234",
            "status": {
              "name": "PASS",
              "id": 1,
              "description": "Test was executed and passed successfully.",
              "color": "#75B000",
              "type": 0
            },
            "cycleName": "Manual",
            "defects": [],
            "stepDefects": [],
            "executionDefectCount": 0,
            "stepDefectCount": 0,
            "totalDefectCount": 0,
            "tenantKey": "amlyYTphN2VkOTUxZi1lZjg5LTQ0ZDktODJlZi1mMjM4YjRkY2FiN2I=",
            "creationDate": "02-28-2016 05:01:02",
            "issueIndex": 10000,
            "projectCycleVersionIndex": "10000_0001456664262308-5a6ee13a3f6b-0001_-1",
            "executionStatusIndex": 1,
            "projectIssueCycleVersionIndex": "10000_10000_0001456664262308-5a6ee13a3f6b-0001_-1"
          },
          "issueKey": "TEST-1",
          "issueLabel": "",
          "component": "",
          "issueSummary": "AAA",
          "projectName": "Test",
          "versionName": "Unscheduled",
          "priority": "Medium",
          "executedByDisplayName": {
            "defined": true,
            "empty": false,
            "orNull": "admin"
          },
          "testStepBeans": null,
          "defectsAsString": "",
          "projectKey": "TEST"
        }

## Assign Bulk Executions [/public/rest/api/1.0/executions/bulkAssign]
### Assign Bulk Executions [POST]
Assigns all the execution(s) with the assignee type that fits in the search criteria. This API returns a jobprogressTicket which should be used for making the call to /public/rest/api/1.0/jobprogress/:jobProgressTicket. Once the request is processed, the jobProgress will populate the message field with the executions that were successfully assigned 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>executions</td> <td>String Array</td> <td>[&quot;0001462834520641-242ac112b-0001&quot;,&quot;0001462834520819-242ac112b-0001&quot;,&quot;0001462834521014-242ac112b-0001&quot;]</td> </tr> <tr> <td>assigneeType</td> <td>String</td> <td>currentUser/assignee</td> </tr> <tr> <td>assignee</td> <td>String</td> <td>jiraUserKey</td> </tr></tbody></table> 



+ Request (application/json)

        {"executions":["0001462834520641-242ac112b-0001","0001462834520819-242ac112b-0001","0001462834521014-242ac112b-0001"],"assigneeType":"assignee","assignee":"jiraUserKey"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"timeTaken":"0 min, 0 sec","stepMessage":"","summaryMessage":"","errorMessage":"","progress":1.0,"message":"{\"success\":\"0001462834520641-242ac112b-0001,0001462834520819-242ac112b-0001,0001462834521014-242ac112b-0001\",\"error\":\"\"}","stepLabel":"","stepMessages":[]}


## Delete Executions in Bulk [/public/rest/api/1.0/executions/delete]
### Delete Executions in Bulk [POST]
Deletes all the execution(s) that fits in the search criteria. This API returns a jobprogressTicket which should be used for making the call to /public/rest/api/1.0/jobprogress/:jobProgressTicket. Once the request is processed, the jobProgress will populate the message field with the executions that were successfully deleted  
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>executions</td> <td>String Array</td> <td>[&quot;0001462834520819-242ac112b-0001&quot;,&quot;0001462834521014-242ac112b-0001&quot;]</td> </tr> </tbody></table> 



+ Request (application/json)

        {"executions":["0001462834520819-242ac112b-0001","0001462834521014-242ac112b-0001"]}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"timeTaken":"0 min, 0 sec","stepMessage":"","summaryMessage":"","errorMessage":"","progress":1.0,"message":"{\"success\":\"0001462834403827-242ac112b-0001,0001462834404266-242ac112b-0001,0001462834404676-242ac112b-0001,0001462858845709-242ac112b-0001,0001462902555866-242ac1130-0001\"}","stepLabel":"","stepMessages":[]}


## Update Execution custom field value [/public/rest/api/1.0/executions/{executionId}/customField]
### Update Execution custom field value [PUT]
Updates the execution custom field value 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>executions</td> <td>String Array</td> <td>[&quot;0001462834520641-242ac112b-0001&quot;,&quot;0001462834520819-242ac112b-0001&quot;,&quot;0001462834521014-242ac112b-0001&quot;]</td> </tr> <tr> <td>status</td> <td>Integer</td> <td>1</td> </tr> <tr> <td>clearDefectMappingFlag</td> <td>Boolean</td> <td>false</td> </tr> <tr> <td>testStepStatusChangeFlag</td> <td>Boolean</td> <td>true</td> </tr> <tr> <td>stepStatus</td> <td>Integer</td> <td>-1</td> </tr> </tbody></table> 


+ Parameters
    + executionId (required,  String) ... executionId of Execution


+ Request (application/json)

        {"customFieldId":"0001519026223763-28f8926f67-0001","value1":{"value":"value"}}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"customFieldId":"0001519026223763-28f8926f67-0001","value1":{"value":"value"}}



## Get Execution  [/public/rest/api/1.0/execution/{executionId}{?issueId,projectId}]
### Get Execution  [GET]
Retrieves Execution and ExecutionStatus by ExecutionId 


+ Parameters
    + executionId (required,  String) ... executionId of Execution
    + issueId (required,  Long) ... issueId of Execution
    + projectId (required,  Long) ... projectId of Execution


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {
          "execution": {
            "execution": {
              "id": "0001456664462103-5a6ee13a3f6b-0001",
              "issueId": 10000,
              "versionId": -1,
              "projectId": 10000,
              "cycleId": "0001456664262308-5a6ee13a3f6b-0001",
              "orderId": 1,
              "executedBy": "admin",
              "executedByAccountId": "557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d",
              "executedOn": "12-08-2018 02:29:08",
              "modifiedBy": "admin",
              "modifiedByAccountId": "557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d",
              "createdBy": "admin",
              "createdByAccountId": "557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d",
              "status": {
                "name": "PASS",
                "id": 1,
                "description": "Test was executed and passed successfully.",
                "color": "#75B000",
                "type": 0
              },
              "cycleName": "Manual",
              "defects": [
                {
                  "id": 10001,
                  "key": "TEST-2",
                  "summary": "Login Failed",
                  "status": {
                    "self": "http://192.168.1.68:2990/jira/rest/api/2/status/10000",
                    "name": "To Do",
                    "id": 10000,
                    "description": "",
                    "iconUrl": "http://192.168.1.68:2990/jira/images/icons/status_generic.gif"
                  }
                }
              ],
              "stepDefects": [],
              "executionDefectCount": 1,
              "stepDefectCount": 0,
              "totalDefectCount": 1,
              "tenantKey": "amlyYTphN2VkOTUxZi1lZjg5LTQ0ZDktODJlZi1mMjM4YjRkY2FiN2I=",
              "creationDate": "02-28-2016 05:01:02",
              "issueIndex": 10000,
              "projectCycleVersionIndex": "10000_0001456664262308-5a6ee13a3f6b-0001_-1",
              "executionStatusIndex": 1,
              "projectIssueCycleVersionIndex": "10000_10000_0001456664262308-5a6ee13a3f6b-0001_-1"
            },
            "issueKey": "TEST-1",
            "issueLabel": "",
            "component": "",
            "issueSummary": "Test Execution Custom Fields",
            "projectName": "Test",
            "versionName": "Release 1.0",
            "priority": "Medium",
            "executedByDisplayName": "Zephyr TM",
            "assigneeType": "currentUser",
            "assignedToDisplayName": "Zephyr TM",
            "testStepBeans": null,
            "defectsAsString": "",
            "projectKey": "TEST",
            "plannedExecutionTimeFormatted": "2d",
            "actualExecutionTimeFormatted": "1d",
            "executionWorkflowStatus": "STARTED",
            "workflowLoggedTimedIncreasePercentage": "100.00",
            "workflowCompletePercentage": "50.00",
            "versionReleased": false,
            "customFieldValuesAsString": null,
            "executionWorkflowEnabled": true
          },
          "executionStatus": {
            "1": {
              "name": "PASS",
              "id": 1,
              "description": "Test was executed and passed successfully.",
              "color": "#75B000",
              "type": 0
            },
            "2": {
              "name": "FAIL",
              "id": 2,
              "description": "Test was executed and failed.",
              "color": "#CC3300",
              "type": 0
            },
            "3": {
              "name": "WIP",
              "id": 3,
              "description": "Test execution is a work-in-progress.",
              "color": "#F2B000",
              "type": 0
            },
            "4": {
              "name": "BLOCKED",
              "id": 4,
              "description": "The test execution of this test was blocked for some reason.",
              "color": "#6693B0",
              "type": 0
            },
            "-1": {
              "name": "UNEXECUTED",
              "id": -1,
              "description": "The test has not yet been executed.",
              "color": "#A0A0A0",
              "type": 0
            }
          }
        }

## Add Tests to Cycle  [/public/rest/api/1.0/executions/add/cycle/{cycleId}]
### Add Tests to Cycle  [POST]
Adds Tests(s) to a Cycle. Users can assign all executions to an individual while adding test to cycle.Users can add tests to cycle by following options. <ol><li>Individually by passing array of issueKeys (method passed in the request should be 1).</li><li>By JQL (method passed in the request should be 2).</li><li>3. From Another Cycle using various filters (method passed in the request should be 3). For e.g. filters test based on fromVersionId/fromCycleId/priorities/statuses  {"versionId":11300,"fromVersionId":"11300","fromCycleId":"0001481179874128-242ac112-0001","priorities":"1","statuses":"4","components":"","labels":"","hasDefects":false,"projectId":11300,"method":"3","assigneeType":"currentUser"}</li></ol>
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td><td><strong>Required</strong></td> </tr> <tr> <td>issues</td> <td>String Array</td> <td>[&quot;TEST-1&quot;]</td> <td>Y (if method = 1) else N</td> </tr> <tr> <td>jql</td> <td>String</td> <td>project = DEMO AND type = Test AND reporter = admin</td> <td>Y (if method = 2) else N</td> </tr> <tr> <td>versionId</td> <td>Integer</td> <td>-1</td><td>Y</td></tr> <tr> <td>projectId</td> <td>Integer</td> <td>10000</td> <td>Y</td></tr><tr> <td>fromVersionId</td> <td>Integer</td> <td>-1</td><td>Y (if method = 3) else N</td></tr><tr> <td>fromCycleId</td> <td>String</td> <td>-0001484006184518-242ac112-0001</td><td>Y (if method = 3) else N</td></tr> <tr> <td>statuses</td> <td>String</td> <td>-1</td><td>N (can be used when method = 3)</td></tr> <tr> <td>priorities</td> <td>String</td> <td>1,4</td><td>N (can be used when method = 3) else N</td></tr><tr> <td>labels</td> <td>String</td> <td>-High,dock</td><td>N (can be used when method = 3)</td></tr><tr> <td>method</td> <td>String</td> <td>&quot;1&quot;</td><td>Y</td> </tr> </tbody></table> 


+ Parameters
    + cycleId (required,  String) ... cycleId of Execution


+ Request (application/json)

        {"projectId":"10930","versionId":12829,"issueId":"17295","assigneeType":"currentUser"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"timeTaken":"0 min, 0 sec","stepMessage":null,"summaryMessage":null,"progress":1.0,"message":"{\"success\":[\"<a target='_parent' href='http://192.168.1.68:2990/jira/browse/TEST-1'>TEST-1</a>\"]}","stepMessages":[]}



## Add Tests to Folder  [/public/rest/api/1.0/executions/add/folder/{folderId}]
### Add Tests to Folder  [POST]
Adds Tests(s) to a Folder. Users can assign all executions to an individual while adding test to cycle/folder. Users can add tests to folder by following options. <ol><li>Individually by passing array of issueKeys (method passed in the request should be 1).</li><li>By JQL Search filter (method passed in the request should be 2).</li><li>3. From Another folder using various filters (method passed in the request should be 3). For e.g. filters test based on fromVersionId/fromCycleId/priorities/statuses


+ Parameters
    + folderId (required,  String) ... folderId of Execution


+ Request (application/json)

        {"issues":["FSC-2","FSC-3"],"assigneeType":"currentUser","method":1,"versionId":12829,"projectId":10930,"cycleId":"0001513838430954-242ac112-0001"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        0001456663770473-5a6ee13a3f6d-0001


## Create Execution [/public/rest/api/1.0/execution]
### Create Execution [POST]
Creates an execution from a JSON representation. An execution can be assigned to a user using the assigneeType. assigneeType can be currentUser/assignee. If no cycleId is passed, it would create it under an Adhoc Cycle 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="4"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td><td><strong>Required</strong></td> </tr> <tr> <td>status</td> <td>Object</td> <td>{&quot;id&quot;:1}</td> <td>N</td></tr> <tr> <td>id</td> <td>String</td> <td>0001456664462103-5a6ee13a3f6b-0001</td> <td>N</td></tr> <tr> <td>projectId</td> <td>Integer</td> <td>10000</td> <td>Y</td></tr> <tr> <td>issueId</td> <td>Integer</td> <td>10000</td> <td>Y</td></tr> <tr> <td>cycleId</td> <td>String</td> <td>0001456664262308-5a6ee13a3f6b-0001</td> <td>N</td></tr> <tr> <td>versionId</td> <td>Integer</td> <td>-1</td> <td>Y</td></tr> <tr> <td>assigneeType</td> <td>String</td> <td>currentUser/assignee</td> <td>N</td></tr><tr> <td>assignee</td> <td>String</td> <td>assigneeName (if assigneeType is assignee)</td> <td>N</td></tr> </tbody></table> 



+ Request (application/json)

        {"status":{"id":1},"id":"0001456664462103-5a6ee13a3f6b-0001","projectId":10000,"issueId":10000,"cycleId":"0001456664262308-5a6ee13a3f6b-0001","versionId":-1,,"assigneeType":"assignee","assignee":"jiraUserKey"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"execution":{"id":"0001456664462103-5a6ee13a3f6b-0001","issueId":10000,"versionId":-1,"projectId":10000,"cycleId":"0001456664262308-5a6ee13a3f6b-0001","orderId":1,"executedBy":"admin","executedByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","executedOn":"02-28-2016 05:03:57","modifiedBy":"admin","modifiedByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","createdBy":"admin","createdByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","status":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"cycleName":"Manual","defects":[],"stepDefects":[],"executionDefectCount":0,"stepDefectCount":0,"totalDefectCount":0,"tenantKey":"amlyYTphN2VkOTUxZi1lZjg5LTQ0ZDktODJlZi1mMjM4YjRkY2FiN2I=","creationDate":"02-28-2016 05:01:02","issueIndex":10000,"projectCycleVersionIndex":"10000_0001456664262308-5a6ee13a3f6b-0001_-1","executionStatusIndex":1,"projectIssueCycleVersionIndex":"10000_10000_0001456664262308-5a6ee13a3f6b-0001_-1"},"issueKey":"TEST-1","issueLabel":"","component":"","issueSummary":"AAA","projectName":"Test","versionName":"Unscheduled","priority":"Medium","executedByDisplayName":"admin","testStepBeans":null,"defectsAsString":"","projectKey":"TEST"}

## Get execution statuses  [/public/rest/api/1.0/execution/statuses]
### Get execution statuses  [GET]
 Get all execution statuses  



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}]


## Update Executions in Bulk [/public/rest/api/1.0/executions]
### Update Executions in Bulk [POST]
Updates all the execution(s) that fits in the search criteria 
 <table width="100%" border="1"> <tbody> <tr> <td colspan="3"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td> </tr> <tr> <td>executions</td> <td>String Array</td> <td>[&quot;0001462834520641-242ac112b-0001&quot;,&quot;0001462834520819-242ac112b-0001&quot;,&quot;0001462834521014-242ac112b-0001&quot;]</td> </tr> <tr> <td>status</td> <td>Integer</td> <td>1</td> </tr> <tr> <td>clearDefectMappingFlag</td> <td>Boolean</td> <td>false</td> </tr> <tr> <td>testStepStatusChangeFlag</td> <td>Boolean</td> <td>true</td> </tr> <tr> <td>stepStatus</td> <td>Integer</td> <td>-1</td> </tr> </tbody></table> 



+ Request (application/json)

        {"executions":["0001462834520641-242ac112b-0001","0001462834520819-242ac112b-0001","0001462834521014-242ac112b-0001"],"status":1,"clearDefectMappingFlag":false,"testStepStatusChangeFlag":true,"stepStatus":-1}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"timeTaken":"0 min, 0 sec","stepMessage":"","summaryMessage":"","errorMessage":"","progress":1.0,"message":"{\"success\":\"0001462834520641-242ac112b-0001,0001462834520819-242ac112b-0001,0001462834521014-242ac112b-0001\",\"error\":\"\"}","stepLabel":"","stepMessages":[]}


## Get Execution Summary of the Issues by Sprint [/public/rest/api/1.0/executions/search/sprint/{sprintId}/issues]
### Get Execution Summary of the Issues by Sprint [POST]
Retrieves the execution summary of the issue(s) in the sprint of sprintId 


+ Parameters
    + sprintId (required,  Long) ... sprintId of Execution


+ Request (application/json)

        {"issueIdOrKeys":"12800,13821"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"successful":{"13821":{"totalExecutions":10,"action":"collapse","totalExecuted":8,"totalOpenDefectCount":1,"executionSummaries":[{"count":2,"executionStatusKey":-1,"executionStatusName":"UNEXECUTED","executionStatusDescription":"The test has not yet been executed.","executionStatusColor":"#A0A0A0"},{"count":1,"executionStatusKey":4,"executionStatusName":"BLOCKED","executionStatusDescription":"The test execution of this test was blocked for some reason.","executionStatusColor":"#6693B0"},{"count":1,"executionStatusKey":20,"executionStatusName":"ASSIGNED","executionStatusDescription":"","executionStatusColor":"#15BD31"},{"count":2,"executionStatusKey":22,"executionStatusName":"PENDING","executionStatusDescription":"","executionStatusColor":"#11494C"},{"count":2,"executionStatusKey":7,"executionStatusName":"VERIFIED","executionStatusDescription":"","executionStatusColor":"#C41440"},{"count":1,"executionStatusKey":23,"executionStatusName":"WIP","executionStatusDescription":"","executionStatusColor":"#F70A4E"},{"count":1,"executionStatusKey":15,"executionStatusName":"LINKED","executionStatusDescription":"","executionStatusColor":"#01FD0C"}],"totalDefectCount":3}}}


## Export execution download [/public/rest/api/1.0/executions/export/download/{fileName}]
### Export execution download [GET]
Download file with Execution data. 


+ Parameters
    + fileName (required,  String) ... fileName of Execution


+ Request (application/json)



    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/x-download)



## Get List of Executions By Cycle  [/public/rest/api/1.0/executions/search/cycle/{cycleId}{?versionId,expand,offset,size,sortOrder,action,sortBy,projectId}]
### Get List of Executions By Cycle - V1 [GET]
Retrieves execution(s) by CycleId. 
 Executions are fetched in a paginated fashion in a batch of 50. Users can use the offset and totalCount parameters to make a paginated call to retrieve all executions.  


+ Parameters
    + versionId (required,  Long) ... versionId of Execution
    + expand (optional, String) ... expand of Execution
    + offset (optional, Integer) ... offset of Execution
    + size (optional, Integer) ... size of Execution
    + sortOrder (optional,  String ) ... sortOrder of Execution
    + cycleId (required,  String) ... cycleId of Execution
    + action (optional, String) ... action of Execution
    + sortBy (optional,  String ) ... sortBy of Execution
    + projectId (required,  Long) ... projectId of Execution


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"searchObjectList":[],"totalCount":0,"currentOffset":1,"executionStatus":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}},"stepExecutionStatus":null}



## Get List of Executions By Cycle - V2 [/public/rest/api/2.0/executions/search/cycle/{cycleId}{?versionId,expand,offset,size,sortOrder,action,sortBy,projectId}]
### Get List of Executions By Cycle - V2 [GET]
Retrieves execution(s) by CycleId. API that supports retrieval of Custom Fields
 Executions are fetched in a paginated fashion in a batch of 50. Users can use the offset and totalCount parameters to make a paginated call to retrieve all executions.  


+ Parameters
    + versionId (required,  Long) ... versionId of Execution
    + expand (optional, String) ... expand of Execution
    + offset (optional, Integer) ... offset of Execution
    + size (optional, Integer) ... size of Execution
    + sortOrder (optional,  String ) ... sortOrder of Execution
    + cycleId (required,  String) ... cycleId of Execution
    + action (optional, String) ... action of Execution
    + sortBy (optional,  String ) ... sortBy of Execution
    + projectId (required,  Long) ... projectId of Execution


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"searchResult":{"searchObjectList":[{"warningMessage":null,"originMessage":null,"execution":{"id":"adbd9d4b-bb66-46fc-a165-dbc96e4ca914","issueId":10066,"versionId":10008,"projectId":10002,"cycleId":"3474de03-d1cf-406c-acf8-80cad6e30d91","orderId":1,"comment":"Failed to Connect to Remote Host","executedBy":"admin","executedByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","executedOn":"12-15-2018 17:44:28","modifiedBy":"admin","modifiedByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","createdBy":"admin","createdByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","status":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"cycleName":"Manual","assignedTo":"admin","defects":[{"id":10063,"key":"QA-48","summary":"Defect 1 Created","status":{"self":"https://qacapture-dev.atlassian.net/rest/api/2/status/10000","name":"To Do","id":10000,"description":"","iconUrl":"https://qacapture-dev.atlassian.net/"},"iconUrl":"https://qacapture-dev.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10303&avatarType=issuetype"}],"stepDefects":[],"executionDefectCount":1,"stepDefectCount":0,"totalDefectCount":1,"creationDate":"12-15-2018 16:12:05","executedByZapi":false,"assignedOn":"12-15-2018 16:12:05","customFieldValues":[{"customFieldId":"4929fd1d-c340-4f00-8948-e910636a70df","value":{"value":"Manual"},"fieldType":"RADIO_BUTTON","disabled":null},{"customFieldId":"90a5a1b1-8d4e-41ec-bc78-7a797776a997","value":{"value":["Dev"]},"fieldType":"MULTI_SELECT","disabled":null}],"issueIndex":10066,"projectCycleVersionIndex":"10002_3474de03-d1cf-406c-acf8-80cad6e30d91_10008","executionStatusIndex":2,"projectIssueCycleVersionIndex":"10002_10066_3474de03-d1cf-406c-acf8-80cad6e30d91_10008"},"issueKey":"QA-50","issueLabel":"","component":"","issueSummary":"asdsdasd","issueDescription":null,"projectName":null,"versionName":null,"priority":null,"priorityIconUrl":null,"executedByDisplayName":"Nirav Shah","assigneeType":null,"assignedToDisplayName":"Nirav Shah","testStepBeans":null,"defectsAsString":null,"projectKey":null,"plannedExecutionTimeFormatted":null,"actualExecutionTimeFormatted":null,"executionWorkflowStatus":null,"workflowLoggedTimedIncreasePercentage":"0.00","workflowCompletePercentage":"0.00","versionReleased":null,"customFieldValuesAsString":null,"executionWorkflowEnabled":true}],"summaryList":null,"totalCount":2,"currentOffset":1,"maxAllowed":50,"sortBy":null,"sortOrder":null,"executionStatus":{"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0},"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0}},"stepExecutionStatus":null},"cycleSummary":{"totalExecutionTime":115200,"totalCycleExecutions":2,"totalDefects":1,"totalLoggedTime":28800,"totalExecutions":5,"totalLoggedTimeFormatted":"1d","totalExecutionTimeFormatted":"4d","totalExecuted":2,"totalCycleExecuted":1,"class":"com.thed.zephyr.connect.vo.GroupedExecutionSummary","executionSummaries":[{"count":3,"executionStatusKey":-1,"executionStatusName":"UNEXECUTED","executionStatusDescription":"The test has not yet been executed.","executionStatusColor":"#A0A0A0"},{"count":1,"executionStatusKey":2,"executionStatusName":"FAIL","executionStatusDescription":"Test was executed and failed.","executionStatusColor":"#CC3300"},{"count":1,"executionStatusKey":4,"executionStatusName":"BLOCKED","executionStatusDescription":"The test execution of this test was blocked for some reason.","executionStatusColor":"#6693B0"}],"executionsAwaitingLog":3}}


## Get List of Executions For Folder - V1  [/public/rest/api/1.0/executions/search/folder/{folderId}{?versionId,expand,offset,size,sortOrder,action,sortBy,projectId,cycleId}]
### Get List of Executions for Folder - V1  [GET]
Retrieves execution(s) by folderId. 
 Executions are fetched in a paginated fashion in a batch of 50. Users can use the offset and totalCount parameters to make a paginated call to retrieve all executions.  


+ Parameters
    + folderId (required,  String) ... folderId of Execution
    + versionId (required,  Long) ... versionId of Execution
    + expand (optional, String) ... expand of Execution
    + offset (optional, Integer) ... offset of Execution
    + size (optional, Integer) ... size of Execution
    + sortOrder (optional,  String ) ... sortOrder of Execution
    + action (optional, String) ... action of Execution
    + sortBy (optional,  String ) ... sortBy of Execution
    + projectId (required,  Long) ... projectId of Execution
    + cycleId (required,  String) ... cycleId of Execution

+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"searchObjectList":[{"warningMessage":null,"originMessage":null,"execution":{"id":"0001513838650733-242ac112-0001","issueId":17294,"versionId":12829,"projectId":10930,"cycleId":"0001513838430954-242ac112-0001","orderId":1,"createdBy":"qa","status":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"cycleName":"Cycle01","assignedTo":"qa","defects":[],"stepDefects":[],"creationDate":"12-21-2017 15:29:10","executedByZapi":false,"assignedOn":"12-21-2017 15:29:10","folderId":"0001513838591890-242ac112-0001","folderName":"Folder01","issueIndex":17294,"projectCycleVersionIndex":"10930_0001513838430954-242ac112-0001_12829","executionStatusIndex":-1,"projectIssueCycleVersionIndex":"10930_17294_0001513838430954-242ac112-0001_12829"},"issueKey":"FSC-2","issueLabel":"","component":"","issueSummary":"Test API","issueDescription":null,"projectName":null,"versionName":null,"priority":null,"priorityIconUrl":null,"executedByDisplayName":"","assigneeType":null,"assignedToDisplayName":"Zephyr QA","testStepBeans":null,"defectsAsString":null,"projectKey":null},{"warningMessage":null,"originMessage":null,"execution":{"id":"0001513838651298-242ac112-0001","issueId":17295,"versionId":12829,"projectId":10930,"cycleId":"0001513838430954-242ac112-0001","orderId":1,"createdBy":"qa","status":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"cycleName":"Cycle01","assignedTo":"qa","defects":[],"stepDefects":[],"creationDate":"12-21-2017 15:29:11","executedByZapi":false,"assignedOn":"12-21-2017 15:29:11","folderId":"0001513838591890-242ac112-0001","folderName":"Folder01","issueIndex":17295,"projectCycleVersionIndex":"10930_0001513838430954-242ac112-0001_12829","executionStatusIndex":-1,"projectIssueCycleVersionIndex":"10930_17295_0001513838430954-242ac112-0001_12829"},"issueKey":"FSC-3","issueLabel":"","component":"","issueSummary":"Test UI","issueDescription":null,"projectName":null,"versionName":null,"priority":null,"priorityIconUrl":null,"executedByDisplayName":"","assigneeType":null,"assignedToDisplayName":"Zephyr QA","testStepBeans":null,"defectsAsString":null,"projectKey":null}],"summaryList":null,"totalCount":2,"currentOffset":1,"maxAllowed":50,"sortBy":null,"sortOrder":null,"executionStatus":{"1":{"name":"PASSED","id":1,"description":"Test was executed and passed successfully.- edited","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP ","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED26","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#C41494","type":0},"5":{"name":"wd","id":5,"description":"","color":"#E7E867","type":1},"6":{"name":"Later","id":6,"description":"","color":"#FB06D6","type":1},"7":{"name":"CTest ","id":7,"description":"Adding CTest -edited","color":"#d61a66","type":1},"8":{"name":"Ptest","id":8,"description":"","color":"#4D4FE9","type":1},"9":{"name":"status123","id":9,"description":"","color":"#b82e89","type":1},"10":{"name":"~~!@#$%^","id":10,"description":"","color":"#9e24d4","type":1},"11":{"name":"2017","id":11,"description":"","color":"#8c1ad4","type":1},"12":{"name":"구글 번역","id":12,"description":"","color":"#e00f0f","type":1},"13":{"name":"abc123!@","id":13,"description":"","color":"#A1DAEB","type":1},"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0}},"stepExecutionStatus":null}


## Get List of Executions for Folder - Latest [/public/rest/api/2.0/executions/search/folder/{folderId}{?versionId,expand,offset,size,sortOrder,action,sortBy,projectId,cycleId}]
### Get List of Executions for Folder - Latest [GET]
Retrieves execution(s) by FolderId. 
 Executions are fetched in a paginated fashion in a batch of 50. Users can use the offset and totalCount parameters to make a paginated call to retrieve all executions.  


+ Parameters
    + folderId (required,  String) ... folderId of Execution
    + versionId (required,  Long) ... versionId of Execution
    + expand (optional, String) ... expand of Execution
    + offset (optional, Integer) ... offset of Execution
    + size (optional, Integer) ... size of Execution
    + sortOrder (optional,  String ) ... sortOrder of Execution
    + cycleId (required,  String) ... cycleId of Execution
    + action (optional, String) ... action of Execution
    + sortBy (optional,  String ) ... sortBy of Execution
    + projectId (required,  Long) ... projectId of Execution


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"searchResult":{"searchObjectList":[{"warningMessage":null,"originMessage":null,"execution":{"id":"08dcb3dc-4cd5-4864-a880-db7fa3e10b6d","issueId":10071,"versionId":10008,"projectId":10002,"cycleId":"3474de03-d1cf-406c-acf8-80cad6e30d91","orderId":1,"comment":"> Login Failed","executedBy":"admin","executedByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","executedOn":"12-08-2018 02:29:08","modifiedBy":"admin","modifiedByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","createdBy":"admin","createdByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","status":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0},"cycleName":"Manual","assignedTo":"admin","defects":[{"id":10063,"key":"QA-48","summary":"Defect 1 Created","status":{"self":"https://qacapture-dev.atlassian.net/rest/api/2/status/10000","name":"To Do","id":10000,"description":"","iconUrl":"https://qacapture-dev.atlassian.net/"},"iconUrl":"https://qacapture-dev.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10303&avatarType=issuetype"}],"stepDefects":[],"executionDefectCount":1,"stepDefectCount":0,"totalDefectCount":1,"creationDate":"12-08-2018 01:42:22","executedByZapi":false,"assignedOn":"12-15-2018 15:53:11","folderId":"a9d23e06-c730-4564-a3d7-e981c87fb997","folderName":"Component","customFieldValues":[{"customFieldId":"4929fd1d-c340-4f00-8948-e910636a70df","value":{"value":"Manual"},"fieldType":"RADIO_BUTTON","disabled":null},{"customFieldId":"90a5a1b1-8d4e-41ec-bc78-7a797776a997","value":{"value":["Stage"]},"fieldType":"MULTI_SELECT","disabled":null}],"plannedExecutionTime":57600,"actualExecutionTime":28800,"workflowStatus":"STARTED","issueIndex":10071,"projectCycleVersionIndex":"10002_3474de03-d1cf-406c-acf8-80cad6e30d91_10008","executionStatusIndex":4,"projectIssueCycleVersionIndex":"10002_10071_3474de03-d1cf-406c-acf8-80cad6e30d91_10008"},"issueKey":"QA-51","issueLabel":"","component":"","issueSummary":"Validate Login to License Server","issueDescription":null,"projectName":null,"versionName":null,"priority":null,"priorityIconUrl":null,"executedByDisplayName":"Zephyr TM","assigneeType":null,"assignedToDisplayName":"Zephyr TM","testStepBeans":null,"defectsAsString":null,"projectKey":null,"plannedExecutionTimeFormatted":"2d","actualExecutionTimeFormatted":"1d","executionWorkflowStatus":"STARTED","workflowLoggedTimedIncreasePercentage":"100.00","workflowCompletePercentage":"50.00","versionReleased":null,"customFieldValuesAsString":null,"executionWorkflowEnabled":true}],"summaryList":null,"totalCount":3,"currentOffset":1,"maxAllowed":50,"sortBy":null,"sortOrder":null,"executionStatus":{"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0},"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0}},"stepExecutionStatus":null},"folderSummary":{"totalExecutionTime":57600,"totalDefects":1,"totalLoggedTime":28800,"totalExecutions":3,"totalLoggedTimeFormatted":"1d","totalExecutionTimeFormatted":"2d","totalExecuted":1,"class":"com.thed.zephyr.connect.vo.GroupedExecutionSummary","executionSummaries":[{"count":2,"executionStatusKey":-1,"executionStatusName":"UNEXECUTED","executionStatusDescription":"The test has not yet been executed.","executionStatusColor":"#A0A0A0"},{"count":1,"executionStatusKey":4,"executionStatusName":"BLOCKED","executionStatusDescription":"The test execution of this test was blocked for some reason.","executionStatusColor":"#6693B0"}],"executionsAwaitingLog":2},"cycleSummary":{"totalExecutionTime":115200,"totalCycleExecutions":2,"totalDefects":1,"totalLoggedTime":28800,"totalExecutions":5,"totalLoggedTimeFormatted":"1d","totalExecutionTimeFormatted":"4d","totalExecuted":3,"totalCycleExecuted":2,"class":"com.thed.zephyr.connect.vo.GroupedExecutionSummary","executionSummaries":[{"count":2,"executionStatusKey":-1,"executionStatusName":"UNEXECUTED","executionStatusDescription":"The test has not yet been executed.","executionStatusColor":"#A0A0A0"},{"count":1,"executionStatusKey":1,"executionStatusName":"PASS","executionStatusDescription":"Test was executed and passed successfully.","executionStatusColor":"#75B000"},{"count":1,"executionStatusKey":2,"executionStatusName":"FAIL","executionStatusDescription":"Test was executed and failed.","executionStatusColor":"#CC3300"},{"count":1,"executionStatusKey":4,"executionStatusName":"BLOCKED","executionStatusDescription":"The test execution of this test was blocked for some reason.","executionStatusColor":"#6693B0"}],"executionsAwaitingLog":3}}

# Group Folder
Folder Resource

## Get Folder  [/public/rest/api/1.0/folder/{folderId}{?versionId,expand,cycleId,projectId}]
### Get Folder  [GET]
Returns a full representation of the Folder for the given folderId.
 A Folder JSON consists of the folder details and an expandos driven executionSummaries for the folder. 


+ Parameters
    + versionId (required, Long) ... versionId of Folder
    + expand (optional, String) ... expand of Folder
    + cycleId (required, String) ... cycleId of Folder
    + projectId (required, Long) ... projectId of Folder
    + folderId (required, String) ... folderId of Folder


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"modifiedTime":1500542720855,"versionId":10001,"createdBy":"admin","tenantKey":"amlyYTozNDBmMjc0ZS0wZTkxLTRmZTktYWZjNy05YzE5MmNlODk3YWY=","name":"Folder1","cycleId":"0001500456316270-985aebc9ffffb0c1-0001","description":"Folder for first phase","createdTime":1500542715855,"modifiedBy":"admin","id":"0001500540949406-985aebc9ffffb0c1-0001","ztId":"0001478586826516-242ac112-0001","projectId":10000}


## Get List of Folders  [/public/rest/api/1.0/folders{?versionId,expand,cycleId,projectId}]
### Get List of Folders  [GET]
Returns a list of folder(s) for a given project, version and cycle along with grouped executions. 


+ Parameters
    + versionId (required,  Long) ... versionId of Folder
    + expand (optional, String) ... expand of Folder
    + cycleId (required, String) ... cycleId of Folder
    + projectId (required,  Long) ... projectId of Folder


+ Request (text/plain)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"modifiedTime":null,"offset":"0","tenantKey":"amlyYTo5YTkzNDk1Yi0xMTIxLTQyZTYtYjIxMS02MmRjZmQ5MzQ4MjU=","totalExecutions":2,"cycleId":"0001513838430954-242ac112-0001","description":"Forler 01 for first cycle","totalExecuted":0,"ztId":"0001454342699134-242ac112-0001","nodeType":"folder","createdByDisplayName":{"defined":true,"orNull":"Zephyr QA","empty":false},"sprintId":null,"versionId":12829,"totalDefects":0,"createdBy":"qa","name":"Folder01","createdTime":1513838591890,"action":"collapse","modifiedBy":null,"id":"0001513838591890-242ac112-0001","cycleName":"Cycle01","class":"com.thed.zephyr.connect.vo.GroupedExecutionSummary","projectId":10930,"executionSummaries":[{"count":2,"executionStatusKey":-1,"executionStatusName":"UNEXECUTED","executionStatusDescription":"The test has not yet been executed.","executionStatusColor":"#A0A0A0"}]},{"modifiedTime":null,"offset":"0","tenantKey":"amlyYTo5YTkzNDk1Yi0xMTIxLTQyZTYtYjIxMS02MmRjZmQ5MzQ4MjU=","totalExecutions":0,"cycleId":"0001513838430954-242ac112-0001","description":"Folder 02","totalExecuted":0,"ztId":"0001454342699134-242ac112-0001","nodeType":"folder","createdByDisplayName":{"defined":true,"orNull":"Zephyr QA","empty":false},"sprintId":null,"versionId":12829,"totalDefects":null,"createdBy":"qa","name":"Folder02","createdTime":1513838704523,"action":"collapse","modifiedBy":null,"id":"0001513838704523-242ac112-0001","cycleName":"Cycle01","class":"com.thed.zephyr.connect.vo.GroupedExecutionSummary","projectId":10930,"executionSummaries":[{"count":0,"executionStatusKey":-1,"executionStatusName":"UNEXECUTED","executionStatusDescription":"The test has not yet been executed.","executionStatusColor":"#A0A0A0"},{"count":0,"executionStatusKey":1,"executionStatusName":"PASSED","executionStatusDescription":"Test was executed and passed successfully.- edited","executionStatusColor":"#75B000"},{"count":0,"executionStatusKey":2,"executionStatusName":"FAIL","executionStatusDescription":"Test was executed and failed.","executionStatusColor":"#CC3300"},{"count":0,"executionStatusKey":3,"executionStatusName":"WIP ","executionStatusDescription":"Test execution is a work-in-progress.","executionStatusColor":"#F2B000"},{"count":0,"executionStatusKey":4,"executionStatusName":"BLOCKED26","executionStatusDescription":"The test execution of this test was blocked for some reason.","executionStatusColor":"#C41494"},{"count":0,"executionStatusKey":5,"executionStatusName":"wd","executionStatusDescription":"","executionStatusColor":"#E7E867"},{"count":0,"executionStatusKey":6,"executionStatusName":"Later","executionStatusDescription":"","executionStatusColor":"#FB06D6"},{"count":0,"executionStatusKey":7,"executionStatusName":"CTest ","executionStatusDescription":"Adding CTest -edited","executionStatusColor":"#d61a66"},{"count":0,"executionStatusKey":8,"executionStatusName":"Ptest","executionStatusDescription":"","executionStatusColor":"#4D4FE9"},{"count":0,"executionStatusKey":9,"executionStatusName":"status123","executionStatusDescription":"","executionStatusColor":"#b82e89"},{"count":0,"executionStatusKey":10,"executionStatusName":"~~!@#$%^","executionStatusDescription":"","executionStatusColor":"#9e24d4"},{"count":0,"executionStatusKey":11,"executionStatusName":"2017","executionStatusDescription":"","executionStatusColor":"#8c1ad4"},{"count":0,"executionStatusKey":12,"executionStatusName":"구글 번역","executionStatusDescription":"","executionStatusColor":"#e00f0f"},{"count":0,"executionStatusKey":13,"executionStatusName":"abc123!@","executionStatusDescription":"","executionStatusColor":"#A1DAEB"}]}]


## Delete Folder  [/public/rest/api/1.0/folder/{folderId}{?versionId,cycleId,projectId}]
### Delete Folder  [DELETE]
Deletes the Folder. All the entities including executions will be deleted along with the Folder. 


+ Parameters
    + versionId (required, Long) ... versionId of Folder
    + cycleId (required, String) ... cycleId of Folder
    + projectId (required, Long) ... projectId of Folder
    + folderId (required, String) ... folderId of Folder


+ Request (text/plain)

        {"projectId":10000,"versionId":"10001","cycleId":"0001500456316270-985aebc9ffffb0c1-0001","folderId":"0001200345678910-985aebc9ffffb0c1-0001"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {folder 0001200345678910-985aebc9ffffb0c1-0001 successfully deleted


## Folder Update [/public/rest/api/1.0/folder/{folderId}]
### Folder Update [PUT]
Update an existing Folder from a JSON representation. 


+ Parameters
    + folderId (required, String) ... folderId of Folder


+ Request (application/json)

        {"name":"Folder011","description":"Forler 01 for first cycle","cycleId":"0001513838430954-242ac112-0001","versionId":12829,"projectId":10930}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"modifiedTime":1513838814914,"offset":"0","tenantKey":"amlyYTo5YTkzNDk1Yi0xMTIxLTQyZTYtYjIxMS02MmRjZmQ5MzQ4MjU=","totalExecutions":2,"cycleId":"0001513838430954-242ac112-0001","description":"Forler 01 for first cycle","totalExecuted":0,"ztId":"0001454342699134-242ac112-0001","nodeType":"folder","sprintId":null,"versionId":12829,"totalDefects":0,"createdBy":"qa","name":"Folder011","createdTime":1513838591890,"action":"collapse","modifiedBy":"qa","id":"0001513838591890-242ac112-0001","class":"com.thed.zephyr.connect.vo.GroupedExecutionSummary","projectId":10930,"executionSummaries":[{"count":2,"executionStatusKey":-1,"executionStatusName":"UNEXECUTED","executionStatusDescription":"The test has not yet been executed.","executionStatusColor":"#A0A0A0"}]}


## Create Folder [/public/rest/api/1.0/folder{?expand,clonedFolderId}]
### Create Folder [POST]
Creates a Folder from a JSON representation. Folder names within a cycle needs to be unique. Ad hoc cycles will not be allowed to create Folder.    

<table width="100%" border="1"> <tbody> <tr> <td colspan="4"><strong> JSON Object Details</strong></td> </tr> <tr> <td><strong>Parameter</strong></td> <td><strong>Type</strong></td> <td><strong>Value</strong></td><td><strong>Required</strong></td>  </tr> <tr> <td>name</td> <td>String</td> <td>Folder 01</td><td>Y</td></tr>  <tr> <td>description</td> <td>String</td> <td>Create New Folder </td> <td>N</td></tr>  <tr> <td>cycleId</td> <td>String</td> <td>0001513838430954-242ac112-0001</td> <td>Y</td></tr>  <tr> <td>projectId</td> <td>Integer</td> <td>10100</td> <td>Y</td></tr>  <tr> <td>versionId</td> <td>Integer</td> <td>10000</td> <td>Y</td></tr> </tbody></table>

+ Parameters
    + expand (optional, String) ... expand of Folder
    + clonedFolderId (optional, String) ... clonedFolderId of Folder


+ Request (application/json)

        {"name":"Folder01","description":"Forler 01 for first cycle","cycleId":"0001513838430954-242ac112-0001","versionId":12829,"projectId":10930}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"modifiedTime":null,"offset":"0","tenantKey":"amlyYTo5YTkzNDk1Yi0xMTIxLTQyZTYtYjIxMS02MmRjZmQ5MzQ4MjU=","totalExecutions":0,"cycleId":"0001513838430954-242ac112-0001","description":"Forler 01 for first cycle","totalExecuted":0,"ztId":"0001454342699134-242ac112-0001","nodeType":"folder","sprintId":null,"versionId":12829,"totalDefects":null,"createdBy":"qa","name":"Folder01","createdTime":1513838591890,"action":"collapse","modifiedBy":null,"id":"0001513838591890-242ac112-0001","class":"com.thed.zephyr.connect.vo.GroupedExecutionSummary","projectId":10930,"executionSummaries":[{"count":0,"executionStatusKey":-1,"executionStatusName":"UNEXECUTED","executionStatusDescription":"The test has not yet been executed.","executionStatusColor":"#A0A0A0"},{"count":0,"executionStatusKey":1,"executionStatusName":"PASSED","executionStatusDescription":"Test was executed and passed successfully.- edited","executionStatusColor":"#75B000"},{"count":0,"executionStatusKey":2,"executionStatusName":"FAIL","executionStatusDescription":"Test was executed and failed.","executionStatusColor":"#CC3300"},{"count":0,"executionStatusKey":3,"executionStatusName":"WIP ","executionStatusDescription":"Test execution is a work-in-progress.","executionStatusColor":"#F2B000"},{"count":0,"executionStatusKey":4,"executionStatusName":"BLOCKED26","executionStatusDescription":"The test execution of this test was blocked for some reason.","executionStatusColor":"#C41494"},{"count":0,"executionStatusKey":5,"executionStatusName":"wd","executionStatusDescription":"","executionStatusColor":"#E7E867"},{"count":0,"executionStatusKey":6,"executionStatusName":"Later","executionStatusDescription":"","executionStatusColor":"#FB06D6"},{"count":0,"executionStatusKey":7,"executionStatusName":"CTest ","executionStatusDescription":"Adding CTest -edited","executionStatusColor":"#d61a66"},{"count":0,"executionStatusKey":8,"executionStatusName":"Ptest","executionStatusDescription":"","executionStatusColor":"#4D4FE9"},{"count":0,"executionStatusKey":9,"executionStatusName":"status123","executionStatusDescription":"","executionStatusColor":"#b82e89"},{"count":0,"executionStatusKey":10,"executionStatusName":"~~!@#$%^","executionStatusDescription":"","executionStatusColor":"#9e24d4"},{"count":0,"executionStatusKey":11,"executionStatusName":"2017","executionStatusDescription":"","executionStatusColor":"#8c1ad4"},{"count":0,"executionStatusKey":12,"executionStatusName":"구글 번역","executionStatusDescription":"","executionStatusColor":"#e00f0f"},{"count":0,"executionStatusKey":13,"executionStatusName":"abc123!@","executionStatusDescription":"","executionStatusColor":"#A1DAEB"}]}



# Group Report
Report Resource

## Get Top Defect count  [/public/rest/api/1.0/defectcount{?versionId,issueStatuses,howMany,projectId}]
### Get Top Defect count  [GET]
Returns the top defect count for report.
 


+ Parameters
    + versionId (required,  Long) ... versionId of Report
    + issueStatuses (optional,  String ) ... issueStatuses of Report
    + howMany (optional,  Integer ) ... howMany of Report
    + projectId (required,  Long) ... projectId of Report


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"data":[]}


## Get execution count  [/public/rest/api/1.0/executioncount{?groupFld,versionId,cycleId,periodName,projectId,folderId}]
### Get Execution count  [GET]
Returns all execution count for report 
 


+ Parameters
    + groupFld (required,  String) ... groupFld of Report
    + versionId (required,  Long) ... versionId of Report
    + cycleId (optional, String) ... cycleId of Report
    + periodName (optional, String) ... periodName of Report
    + projectId (required,  Long) ... projectId of Report
    + folderId (optional, String) ... folderId of JiraReport


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"groupFld":"","statusSeries":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}},"data":[]}


## Get Test Distribution count  [/public/rest/api/1.0/testdistributioncount{?groupFld,versionId,projectId}]
### Get Test Distribution count  [GET]
Gets test distribution count for the report  


+ Parameters
    + groupFld (required,  String) ... groupFld of Report
    + versionId (required,  Long) ... versionId of Report
    + projectId (required,  Long) ... projectId of Report


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"groupFld":"user","urlBase":"TBD","data":[{"name":"Test Manager","cnt":"6","id":"test.manager"},{"name":"Sanjay Zalavadia [Administrator]","cnt":"4","id":"zal@getzephyr.com"},{"name":"Roopa Sharma","cnt":"13","id":"roopa.sharma@getzephyr.com"}]}


## Get execution by cycles for assignee [/public/rest/api/1.0/executionbycyclesforassignee{?versionId,cycleIds,folderIds,projectId}]
### Get execution by cycles for assignee [GET]
Returns all the executions count by cycles for assignee 
 


+ Parameters
    + versionId (required,  Long) ... versionId of JiraReport
    + cycleIds (required,  String) ... cycleIds of JiraReport
    + folderIds (optional, String) ... folderIds of JiraReport
    + projectId (required,  Long) ... projectId of JiraReport


+ Request (application/json)


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"statusSeries":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}},"data":[{"id":"admin", "name":"admin", "cnt":3, "total":3}]}




# Group JobProgress
JobProgress Resource

## Get Job Progress status  [/public/rest/api/1.0/jobprogress/{jobProgressTicket}]
### Get Job Progress status  [GET]
 Get job progress with status  


+ Parameters
    + jobProgressTicket (required,  String) ... jobProgressTicket of JobProgress


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"timeTaken":"0 min, 0 sec","stepMessage":"","summaryMessage":"","errorMessage":"","progress":0.0,"message":"","stepLabel":"","stepMessages":[]}



# Group License
License Resource

## Get addon info  [/public/rest/api/1.0/zlicense/addoninfo]
### Get addon info  [GET]
 Get addon information  



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"defined":true,"empty":false,"orNull":{"key":"com.thed.zephyr.cloud","version":"1.1.8","state":"ENABLED","host":{"product":"JIRA","contacts":[{"name":"Your Name","email":"you@domain.com"}]},"license":null}}



# Group ServerInfo
ServerInfo Resource

## Get server information  [/public/rest/api/1.0/serverinfo]
### Get server information  [GET]
 Get server information  



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"addonServerInfo":{"version":"2.1-rc-53-4bc0ed7","name":"zephyr-connect"},"jiraServerInfo":{"baseUri":"https://getzephyr.com","version":"1000.526.2","buildNumber":100018,"buildDate":{"weekyear":2016,"monthOfYear":11,"millisOfDay":0,"weekOfWeekyear":45,"yearOfEra":2016,"hourOfDay":0,"minuteOfHour":0,"secondOfMinute":0,"millisOfSecond":0,"yearOfCentury":16,"centuryOfEra":20,"secondOfDay":0,"minuteOfDay":0,"era":1,"dayOfYear":314,"dayOfWeek":3,"dayOfMonth":9,"year":2016,"chronology":{"zone":{"fixed":false,"uncachedZone":{"fixed":false,"cachable":true,"id":"America/Los_Angeles"},"id":"America/Los_Angeles"}},"zone":{"fixed":false,"uncachedZone":{"fixed":false,"cachable":true,"id":"America/Los_Angeles"},"id":"America/Los_Angeles"},"millis":1478678400000,"afterNow":false,"beforeNow":true,"equalNow":false},"serverTime":{"weekyear":2016,"monthOfYear":11,"millisOfDay":58937900,"weekOfWeekyear":46,"yearOfEra":2016,"hourOfDay":16,"minuteOfHour":22,"secondOfMinute":17,"millisOfSecond":900,"yearOfCentury":16,"centuryOfEra":20,"secondOfDay":58937,"minuteOfDay":982,"era":1,"dayOfYear":320,"dayOfWeek":2,"dayOfMonth":15,"year":2016,"chronology":{"zone":{"fixed":false,"uncachedZone":{"fixed":false,"cachable":true,"id":"America/Los_Angeles"},"id":"America/Los_Angeles"}},"zone":{"fixed":false,"uncachedZone":{"fixed":false,"cachable":true,"id":"America/Los_Angeles"},"id":"America/Los_Angeles"},"millis":1479255737900,"afterNow":false,"beforeNow":true,"equalNow":false},"scmInfo":"d415428281834d64643ecc666918911826753252","serverTitle":"JIRA"}}



# Group StepResult
StepResult Resource

## Get StepDefects by Execution  [/public/rest/api/1.0/stepdefect/byexecution{?executionId,expand,projectId}]
### Get StepDefects by Execution  [GET]
Returns a full JSON representation of the stepDefects for the given executionId.
  


+ Parameters
    + executionId (required,  String) ... executionId of StepResult
    + expand (optional, String) ... expand of StepResult
    + projectId (required,  Long) ... projectId of StepResult


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"stepDefects":{"1":{"currentStepExecutionStatus":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"stepDefects":[{"key":"SAM-63","status":"To Do","summary":"aaaa"}],"stepResultId":"0001479249470841-fa312653ffffd5ee-0001"}},"executionStatus":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#2DFB2E","type":0}},"executionDefectCount":0,"stepDefectCount":1,"totalDefectCount":1}


## Get StepResults by Execution  [/public/rest/api/1.0/stepresult/search{?executionId,issueId,isOrdered}]
### Get StepResults by Execution [GET]
Returns a full JSON representation of all the StepResults for the given executionId and issueId. 


+ Parameters
    + executionId (required,  String) ... executionId of StepResult
    + issueId (required,  Long) ... issueId of StepResult
    + isOrdered (optional, Boolean) ... isOrdered of StepResult


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"stepResults":[{"id":"0001479947330216-42e2be69451-0001","executionId":"0001479947330129-42e2be69451-0001","stepId":"0001479947317061-42e2be69451-0001","status":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"issueId":10116,"modifiedBy":"admin","executionIndex":"0001479947330129-42e2be69451-0001","executionStatusIndex":-1,"issueIndex":10116,"orderId":1},{"id":"0001479947330232-42e2be69451-0001","executedOn":1479956118701,"executedBy":"admin","executionId":"0001479947330129-42e2be69451-0001","stepId":"0001479947320624-42e2be69451-0001","status":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"issueId":10116,"modifiedBy":"admin","executionIndex":"0001479947330129-42e2be69451-0001","executionStatusIndex":1,"issueIndex":10116,"orderId":2},{"id":"0001479947330248-42e2be69451-0001","executedOn":1479947372171,"comment":"","executedBy":"admin","executionId":"0001479947330129-42e2be69451-0001","stepId":"0001479947323141-42e2be69451-0001","status":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0},"issueId":10116,"modifiedBy":"admin","executionIndex":"0001479947330129-42e2be69451-0001","executionStatusIndex":4,"issueIndex":10116,"orderId":3},{"id":"0001479955137548-42e2be69451-0001","executedOn":1479955137548,"executedBy":"admin","executionId":"0001479947330129-42e2be69451-0001","stepId":"0001479954602302-42e2be69451-0001","status":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"issueId":10116,"executionIndex":"0001479947330129-42e2be69451-0001","executionStatusIndex":-1,"issueIndex":10116,"orderId":4}],"executionStatus":{"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0},"5":{"name":"SOME","id":5,"description":"AAA","color":"#9BE9C6","type":1}}}


## Update StepResult  [/public/rest/api/1.0/stepresult/{stepResultId}]
### Update StepResult  [PUT]
 Update StepResult from a JSON representation. The StepResult can either be updated by setting explicit the field value(s) or by using an operation to change the field value.
 <table><thead> <tr> <th>Parameter</th><th>Type</th><th>Value</th><th>Required</th> </tr> </thead><tbody> <tr> <td>status</td> <td>Object</td> <td>{"id":2}</td> <td>N</td> </tr> <tr> <td>issueId</td> <td>Long</td> <td>10052</td> <td>Y</td> </tr> <tr> <td>stepId</td> <td>String</td> <td>0001479249432886-fa312653ffffd5ee-0001</td> <td>N</td> </tr> <tr> <td>executionId</td> <td>String</td> <td>0001479152925797-4676fceeffffec4c-0001</td> <td>Y</td> </tr></tbody></table> 


+ Parameters
    + stepResultId (required,  String) ... stepResultId of StepResult


+ Request (application/json)

        {"status":{"id":2},"issueId":10052,"stepId":"0001479249432886-fa312653ffffd5ee-0001","executionId":"0001479152925797-4676fceeffffec4c-0001"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"id":"0001479249470841-fa312653ffffd5ee-0001","executedOn":1479251469860,"executedBy":"admin","executionId":"0001479152925797-4676fceeffffec4c-0001","stepId":"0001479249432886-fa312653ffffd5ee-0001","status":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"issueId":10052,"modifiedBy":"admin","executionIndex":"0001479152925797-4676fceeffffec4c-0001","issueIndex":10052,"executionStatusIndex":2}


## Get StepResult [/public/rest/api/1.0/stepresult/{stepResultId}{?executionId}]
### Get StepResult [GET]
Returns a full JSON representation of the StepResult for the given executionId and stepResultId. 


+ Parameters
    + executionId (required,  String) ... executionId of StepResult
    + stepResultId (required,  String) ... stepResultId of StepResult


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"id":"0001479249470841-fa312653ffffd5ee-0001","executedOn":1479249470841,"executedBy":"admin","executionId":"0001479152925797-4676fceeffffec4c-0001","stepId":"0001479249432886-fa312653ffffd5ee-0001","status":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},"issueId":10052,"executionIndex":"0001479152925797-4676fceeffffec4c-0001","issueIndex":10052,"executionStatusIndex":-1}



# Group Teststep
Teststep Resource

## Move TestStep  [/public/rest/api/1.0/teststep/{issueId}/{id}/move{?projectId}]
### Move TestStep  [POST]
 Move TestStep from JSON representation. 
 A parameter(after) takes TestStepId and is used to move TestStep after this parameter. Or use position=First to move TestStep at the end. 
 <table> <thead> <tr> <th>Parameter</th><th>Type</th><th>Value</th><th>Required</th> </tr> </thead><tbody> <tr> <td>after</td> <td>String</td><td>0001479232086830-fa312653ffffd5ee-0001</td><td>N</td></tr><tr><td>position</td><td>String</td><td>First</td><td>N</td></tbody></table>  


+ Parameters
    + issueId (required,  Long) ... issueId of Teststep
    + id (required,  String) ... id of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        {"after":"0001479232086830-fa312653ffffd5ee-0001"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"id":"0001479232750769-fa312653ffffd5ee-0001","orderId":1,"issueId":10200,"step":"Step","data":"Data","result":"Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232750770,"lastModifiedOn":1479232750770},{"id":"0001479232086830-fa312653ffffd5ee-0001","orderId":2,"issueId":10200,"step":"Sample Step Updated","data":"Sample Step Data","result":"Sample Expected Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232086830,"lastModifiedOn":1479232538185}]



## Get, Update and Delete TestStep  [/public/rest/api/1.0/teststep/{issueId}/{id}{?projectId}]
### Get TestStep  [GET]
 Get a full representation of TestStep for the given testStepId  


+ Parameters
    + issueId (required, Long) ... issueId of Teststep
    + id (required,  String) ... id of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"id":"0001479232750769-fa312653ffffd5ee-0001","orderId":1,"issueId":10200,"step":"Step","data":"Data","result":"Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232750770,"lastModifiedOn":1479232750770}


### Update TestStep  [PUT]
 Update a TestStep from a JSON representation. 
The TestStep can either be updated by setting explicit the field value(s) or by using an operation to change the field value. <table> <thead> <tr> <th>Parameter</th><th>Type</th><th>Value</th><th>Required</th> </tr> </thead><tbody><tr><td>id</td><td>String</td><td>0001481146115453-3a0480a3ffffc384-0001</td><td>Y</td></tr><tr><td>step</td><td>String</td><td>Sample Test Step</td><td>N</td></tr><tr><td>data</td><td>String</td><td>Sample Test Data</td><td>N</td></tr><tr><td>result</td><td>String</td><td>Sample Expected Result</td><td>N</td></tr><tr><td>customFieldValues</td><td>Array</td><td>[{"customFieldId":"3ce1c679-7c43-4d37-89f6-757603379e31","value":{"value":"08/21/2018"}}]</td><td>N</td></tr></tbody></table> 


+ Parameters
    + issueId (required,  Long) ... issueId of Teststep
    + id (required,  String) ... id of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        {"id":"0001481146115453-3a0480a3ffffc384-0001","step":"Sample Test Step","data":"Sample Test Data","result":"Expected Test Result","customFieldValues":[{"customFieldId":"3ce1c679-7c43-4d37-89f6-757603379e31","value":{"value":"08/21/2018"}}]}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"id":"0001481146115453-3a0480a3ffffc384-0001","orderId":3,"issueId":10405,"step":"Sample Test Step","data":"Sample Test Data","result":"Expected Test Result","createdBy":"admin","createdByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","modifiedBy":"admin","modifiedByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","createdOn":1481146115453,"lastModifiedOn":1481146247126,"customFieldValues":[{"customFieldId":"ff04f063-e70c-47d2-85a3-2749c5339fee","value":{"value":"323"},"fieldType":"NUMBER","disabled":null},{"customFieldId":"0ed64ca2-1cde-4b3e-9741-1701fbc27294","value":{"value":["Manual","Regression"]},"fieldType":"MULTI_SELECT","disabled":null}]}


### Delete TestStep  [DELETE]
 Delete TestStep by testStepId  


+ Parameters
    + issueId (required,  Long) ... issueId of Teststep
    + id (required,  String) ... id of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"id":"0001479232086830-fa312653ffffd5ee-0001","orderId":1,"issueId":10200,"step":"Sample Step Updated","data":"Sample Step Data","result":"Sample Expected Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232086830,"lastModifiedOn":1479232538185},{"id":"0001479232750769-fa312653ffffd5ee-0001","orderId":2,"issueId":10200,"step":"Step","data":"Data","result":"Result","createdBy":"admin","modifiedBy":"admin","createdOn":1479232750770,"lastModifiedOn":1479232750770}]


## Create and Get all TestStep  [/public/rest/api/1.0/teststep/{issueId}{?projectId}]
### Create new TestStep  [POST]
 Create a TestStep from a JSON representation. <br />The TestStep can either be created by setting explicit the field value(s). <table> <thead> <tr> <th>Parameter</th><th>Type</th><th>Value</th><th>Required</th> </tr> </thead><tbody><tr><td>step</td><td>String</td><td>Sample Test Step</td><td>N</td></tr><tr><td>data</td><td>String</td><td>Sample Test Data</td><td>N</td></tr><tr><td>result</td><td>String</td><td>Sample Expected Result</td><td>N</td></tr></tbody></table>  


+ Parameters
    + issueId (required,  Long) ... issueId of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        {"step":"Sample Test Step","data":"Sample Test Data","result":"Sample Expected Result"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"id":"5ec00070-959c-4a2c-82b8-af1f85ec241f","orderId":2,"issueId":10073,"step":"Verify Launch Sequence","data":"Verify Launch Sequence","result":"Verify Launch Sequence","createdBy":"admin","createdByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","createdOn":1544984276580,"lastModifiedOn":1544984276580,"customFieldValues":[{"customFieldId":"64194653-9c42-483b-b306-16cf56e70abe","value":{"value":["Pass"]},"fieldType":"MULTI_SELECT","disabled":null},{"customFieldId":"40640271-5d33-4c05-af36-3057e128d55a","value":{"value":"12/19/2018 04:00:00"},"fieldType":"DATE_TIME","disabled":null}],"attachments":[]}


## Get all TestSteps - V1 [/public/rest/api/1.0/teststep/{issueId}{?projectId}]
### Get all TestSteps - V1 [GET]
 Get full representation of TestSteps for the given issueId and projectId  


+ Parameters
    + issueId (required,  Long) ... issueId of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"id":"0001479232086830-fa312653ffffd5ee-0001","orderId":1,"issueId":10200,"step":"Sample Step","data":"Sample Step Data","result":"Sample Expected Result","createdBy":"admin","createdByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","modifiedBy":"admin","modifiedByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","createdOn":1479232086830,"lastModifiedOn":1479232292243}]

## Get all TestSteps - Latest [/public/rest/api/2.0/teststep/{issueId}{?projectId}]
### Get all TestSteps - Latest [GET] 
 Get full representation of TestSteps for the given issueId and projectId  


+ Parameters
    + issueId (required,  Long) ... issueId of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"testSteps":[{"id":"002b456d-1a68-4dc1-ba3a-6b3afba600cc","orderId":1,"issueId":10073,"step":"Verify Final Build","data":"Verify Final Build","result":"Verify Final Build","createdBy":"admin","createdByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","createdOn":1544984243831,"lastModifiedOn":1544984243831,"customFieldValues":[{"customFieldId":"40640271-5d33-4c05-af36-3057e128d55a","value":{"value":""},"fieldType":"DATE_TIME","disabled":null}],"attachments":[]},{"id":"5ec00070-959c-4a2c-82b8-af1f85ec241f","orderId":2,"issueId":10073,"step":"Verify Launch Sequences","data":"Verify Launch Sequence","result":"Verify Launch Sequence","createdBy":"admin","createdByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","modifiedBy":"admin","modifiedByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","createdOn":1544984276580,"lastModifiedOn":1544995900663,"customFieldValues":[{"customFieldId":"64194653-9c42-483b-b306-16cf56e70abe","value":{"value":["Pass"]},"fieldType":"MULTI_SELECT","disabled":null},{"customFieldId":"40640271-5d33-4c05-af36-3057e128d55a","value":{"value":"12/19/2018 04:00:00"},"fieldType":"DATE_TIME","disabled":null}],"attachments":[]}],"totalCount":2}

## Get all TestStep statuses  [/public/rest/api/1.0/teststep/statuses]
### Get all TestStep statuses  [GET]
Get List of all statuses related to Test Steps. 



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}]


## Clone TestStep  [/public/rest/api/1.0/teststep/{issueId}/clone/{id}{?projectId}]
### Clone TestStep  [POST]
 Clone TestStep from a JSON representation. <br />A parameter(position) is used to move TestStep during cloning. <br />If position = -2, than just take the fromStepId and add it at the end.<br />If position = -1, then add TestStep after newly created TestStep. <br />If position = 0 , then add TestStep before newly created TestStep.<br /><table> <thead> <tr> <th>Parameter</th><th>Type</th><th>Value</th><th>Required</th> </tr> </thead><tbody><tr><td>step</td><td>String</td><td>Sample Test Step</td><td>Y</td></tr><tr><td>data</td><td>String</td><td>Sample Test Data</td><td>N</td></tr><tr><td>result</td><td>String</td><td>Test Expected Result</td><td>N</td></tr><tr><td>position</td><td>String</td><td>"0" OR "-1" OR "-2"</td><td>Y</td></tr>  


+ Parameters
    + issueId (required,  Long) ... issueId of Teststep
    + id (required,  String) ... id of Teststep
    + projectId (required,  Long) ... projectId of Teststep


+ Request (application/json)

        {"data":"Sample Test Data Updated","result":"Sample Expected Result","step":"CLONE - Sample Test Step","position":"-1"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"testSteps":[{"id":"002b456d-1a68-4dc1-ba3a-6b3afba600cc","orderId":1,"issueId":10073,"step":"Verify Final Build","data":"Verify Final Build","result":"Verify Final Build","createdBy":"admin","createdByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","createdOn":1544984243831,"lastModifiedOn":1544984243831,"customFieldValues":[{"customFieldId":"40640271-5d33-4c05-af36-3057e128d55a","value":{"value":""},"fieldType":"DATE_TIME","disabled":null}],"attachments":[]},{"id":"5ec00070-959c-4a2c-82b8-af1f85ec241f","orderId":2,"issueId":10073,"step":"Verify Launch Sequences","data":"Verify Launch Sequence","result":"Verify Launch Sequence","createdBy":"admin","createdByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","modifiedBy":"admin","modifiedByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","createdOn":1544984276580,"lastModifiedOn":1544995900663,"customFieldValues":[{"customFieldId":"64194653-9c42-483b-b306-16cf56e70abe","value":{"value":["Pass"]},"fieldType":"MULTI_SELECT","disabled":null},{"customFieldId":"40640271-5d33-4c05-af36-3057e128d55a","value":{"value":"12/19/2018 04:00:00"},"fieldType":"DATE_TIME","disabled":null}],"attachments":[]},{"id":"818e686d-f2c4-4ec6-9dbd-b7621d0d58c6","orderId":3,"issueId":10073,"step":"CLONE - Verify Launch Sequences","data":"Verify Launch Sequence","result":"Verify Launch Sequence","createdBy":"admin","createdByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","modifiedBy":"admin","modifiedByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","createdOn":1544996004061,"lastModifiedOn":1544996004061,"customFieldValues":[{"customFieldId":"64194653-9c42-483b-b306-16cf56e70abe","value":{"value":["Pass"]},"fieldType":"MULTI_SELECT","disabled":null},{"customFieldId":"40640271-5d33-4c05-af36-3057e128d55a","value":{"value":"12/19/2018 04:00:00"},"fieldType":"DATE_TIME","disabled":null}],"attachments":[]}],"totalCount":3}


# Group Traceability
Traceability Resource

## Search defect statistics  [/public/rest/api/1.0/traceability/search/defect/statistics{?defectIdList}]
### Search defect statistics  [GET]
Returns a full representation of the defect statistics for the given defect id or list(comma seperated). <table><thead> <tr> <th>Parameter</th><th>Type</th><th>Value</th><th>Required</th> </tr> </thead><tbody> <tr> <td>defectIdList</td> <td>Long</td> <td>10013,10045,10049</td> <td>Y</td> </tr> </tbody></table>  


+ Parameters
    + defectIdList (required,  String) ... defectIdList of Traceability


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"defect":{"id":10009,"key":"SAM-10","status":"To Do","statusId":10000,"summary":"As a developer, I can update details on an item using the Detail View >> Click the \"SAM-13\" link at the top of this card to open the detail view"},"executionStat":{"statuses":[],"total":0},"reqStat":{"count":0},"testStat":{"count":0}},{"defect":{"id":10006,"key":"SAM-7","status":"To Do","statusId":10000,"summary":"As a product owner, I'd like to include bugs, tasks and other issue types in my backlog >> Bugs like this one will also appear in your backlog but they are not normally estimated"},"executionStat":{"statuses":[],"total":0},"reqStat":{"count":0},"testStat":{"count":0}}]


## Search Tests by requirements [/public/rest/api/1.0/traceability/search/tests/requirement{?requirementIdOrKeyList}]
### Search Tests by requirements [GET]
Returns a full representation of the Test by requirement report for the given requirement id or key list(comma seperated).
 <table><thead> <tr> <th>Parameter</th><th>Type</th><th>Value</th><th>Required</th> </tr> </thead><tbody> <tr> <td>requirementIdOrKeyList</td> <td>Long</td> <td>10013,10045,10049</td> <td>Y</td> </tr> </tbody></table> 


+ Parameters
    + requirementIdOrKeyList (required,  String) ... requirementIdOrKeyList of Traceability


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"requirement":{"id":10013,"key":"SAM-14","status":"Done","statusId":10001,"summary":"Instructions for deleting this sample board and project are in the description for this issue >> Click the \"SAM-17\" link and read the description tab of the detail view for more"},"tests":[{"defectStat":{"total":0},"executionStat":{"statuses":[{"count":2,"status":"UNEXECUTED"}],"total":2},"test":{"id":10200,"key":"SAM-85","status":"To Do","statusId":10000,"summary":"Samsul"}},{"defectStat":{"total":0},"executionStat":{"statuses":[],"total":0},"test":{"id":10048,"key":"SAM-49","status":"To Do","statusId":10000,"summary":"z"}}],"totalDefects":0},{"requirement":{"id":10009,"key":"SAM-10","status":"To Do","statusId":10000,"summary":"As a developer, I can update details on an item using the Detail View >> Click the \"SAM-13\" link at the top of this card to open the detail view"},"tests":[],"totalDefects":0},{"requirement":{"id":10006,"key":"SAM-7","status":"To Do","statusId":10000,"summary":"As a product owner, I'd like to include bugs, tasks and other issue types in my backlog >> Bugs like this one will also appear in your backlog but they are not normally estimated"},"tests":[],"totalDefects":0}]


## Download traceability report  [/public/rest/api/1.0/traceability/export/download/{fileName}]
### Download traceability report  [GET]
Returns a downloadable file of the report for the given file name. 


+ Parameters
    + fileName (required,  String) ... fileName of Traceability


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        


## Export traceability report [/public/rest/api/1.0/traceability/export]
### Export traceability report [POST]
Return job progress token(String) to track export job. JSON Object details(Request):<table><thead> <tr> <th>Parameter</th><th>Type</th><th>Value</th><th>Required</th> </tr> </thead><tbody> <tr> <td>exportType</td> <td>String</td> <td>html|excel</td> <td>Y</td> </tr> <tr> <td>requirementIdList</td> <td>Array[String]</td> <td>["10009","10006"]</td> <td>Y</td> </tr> <tr> <td>versionId</td> <td>Long</td> <td>10000</td> <td>N</td> </tr> </tbody></table>  



+ Request (application/json)

        {"exportType":"html","requirementIdList":["10009","10006"],"versionId":10000}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"jobProgressTicket":"0001479325760029-725f24aeffff8568-0001"}


## Search Executions by defect  [/public/rest/api/1.0/traceability/search/executions/defect{?maxResult,offset,defectId}]
### Search Executions by defect  [GET]
Returns a full representation of the Executions by defect for the given defect id.
  


+ Parameters
    + maxResult (required,  Integer) ... maxResult of Traceability
    + offset (required,  Integer) ... offset of Traceability
    + defectId (required,  Long) ... defectId of Traceability


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"executions":[{"execution":{"id":"0001479277915060-fa312653ffffd5ee-0001","status":"WIP","statusId":"3","stepLevel":false,"testCycle":"Ad hoc"},"requirement":[{"id":10009,"key":"SAM-10","status":"To Do","statusId":10000,"summary":"As a developer, I can update details on an item using the Detail View >> Click the \"SAM-13\" link at the top of this card to open the detail view"}],"test":{"id":10100,"key":"SAM-83","status":"To Do","statusId":10000,"summary":"Sample"}}],"totalCount":1}


## Search Executions by test  [/public/rest/api/1.0/traceability/search/executions/test{?maxResult,offset,testId}]
### Search Executions by test  [GET]
Returns a full representation of the Executions by test report for the given requirement testId. 


+ Parameters
    + maxResult (required,  Integer) ... maxResult of Traceability
    + offset (required,  Integer) ... offset of Traceability
    + testId (required,  Long) ... testId of Traceability


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"executions":[{"execution":{"id":"0001479277915060-fa312653ffffd5ee-0001","status":"WIP","statusId":"3","stepLevel":false,"testCycle":"Ad hoc"},"requirement":[{"id":10009,"key":"SAM-10","status":"To Do","statusId":10000,"summary":"As a developer, I can update details on an item using the Detail View >> Click the \"SAM-13\" link at the top of this card to open the detail view"}],"test":{"id":10100,"key":"SAM-83","status":"To Do","statusId":10000,"summary":"Sample"}}],"totalCount":1}



# Group ZQL
ZQL Resource

## Get ZQL field values [/public/rest/api/1.0/zql/fields/values]
### Get ZQL field values [GET]
Returns a full representation of the ZQL field values. 



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"fields":{"project":[{"id":10000,"key":"SAM","name":"Samsung"},{"id":10100,"key":"SONY","name":"SONY"}],"fixVersion":[{"id":-1,"name":"Unscheduled","projectId":10000,"archived":false,"released":false},{"id":10002,"name":"Version 3.0","projectId":10000,"archived":false,"released":false},{"id":10001,"name":"Version 1.0","projectId":10000,"archived":false,"released":true},{"id":10000,"name":"Version 2.0","projectId":10000,"archived":false,"released":false},{"id":-1,"name":"Unscheduled","projectId":10100,"archived":false,"released":false},{"id":10100,"name":"sonyV1","projectId":10100,"archived":false,"released":false},{"id":10101,"name":"sonyV2","projectId":10100,"archived":false,"released":false},{"id":10102,"name":"sonyV3","projectId":10100,"archived":false,"released":false},{"id":10103,"name":"sonyV4","projectId":10100,"archived":false,"released":false},{"id":10104,"name":"sonyV5","projectId":10100,"archived":false,"released":false}],"component":[{"id":10000,"name":"sonyC1","projectId":10100},{"id":10001,"name":"sonyC2","projectId":10100},{"id":10002,"name":"sonyC3","projectId":10100},{"id":10003,"name":"sonyC4","projectId":10100},{"id":10004,"name":"sonyC5","projectId":10100}],"priority":[{"id":1,"name":"Highest"},{"id":2,"name":"High"},{"id":3,"name":"Medium"},{"id":4,"name":"Low"},{"id":5,"name":"Lowest"}],"executionStatus":[{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0},{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0}],"cycleName":[{"id":"-1","name":"Ad hoc","projectId":10000,"versionId":-1},{"id":"-1","name":"Ad hoc","projectId":10100,"versionId":10101},{"id":"0001479155949754-4676fceeffffec4c-0001","name":"Sample Cycle","projectId":10000,"versionId":-1},{"id":"0001479155955288-4676fceeffffec4c-0001","name":"b","projectId":10000,"versionId":-1},{"id":"0001479155963840-4676fceeffffec4c-0001","name":"c","projectId":10000,"versionId":-1},{"id":"0001479155968682-4676fceeffffec4c-0001","name":"d","projectId":10000,"versionId":-1},{"id":"0001479155972223-4676fceeffffec4c-0001","name":"e","projectId":10000,"versionId":-1},{"id":"0001479153073431-4676fceeffffec4c-0001","name":"adfasdfa","projectId":10000,"versionId":-1},{"id":"0001479153076837-4676fceeffffec4c-0001","name":"asdfasdf","projectId":10000,"versionId":-1},{"id":"0001479152872028-4676fceeffffec4c-0001","name":"Another","projectId":10000,"versionId":-1},{"id":"0001479152878248-4676fceeffffec4c-0001","name":"Another A","projectId":10000,"versionId":-1},{"id":"0001479242469981-fa312653ffffd5ee-0001","name":"Sprint1","projectId":10100,"versionId":10101}],"executedBy":[{"id":"admin","key":"admin","name":"মাসুদুর রহমান   [Administrator]","fullName":"মাসুদুর রহমান   [Administrator]"}],"assignee":[{"id":"admin","key":"admin","name":"মাসুদুর রহমান   [Administrator]","fullName":"মাসুদুর রহমান   [Administrator]"}],"executionDate":null,"creationDate":null}}


## Get ZQL field configuration [/public/rest/api/1.0/zql/fields]
### Get ZQL field configuration [GET]
Returns a full representation of the ZQL field configuration. 



+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"indexName":"projectId","fieldName":"project","displayName":"Project","i18NName":"Project","supportedOperators":["not in","in","is","!=","is not","="],"dataType":"Long","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":1,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]},{"indexName":"priorityId","fieldName":"priority","displayName":"Priority","i18NName":"Priority","supportedOperators":["not in","in","is","!=","is not","="],"dataType":"Long","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":7,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]},{"indexName":"cycleId","fieldName":"cycleName","displayName":"Cycle Name","i18NName":"Cycle Name","supportedOperators":["not in","in","is","!=","is not","!~","=","~"],"dataType":"String","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":3,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["LIKE","NOT_LIKE","EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]},{"indexName":"status","fieldName":"executionStatus","displayName":"Execution Status","i18NName":"Execution Status","supportedOperators":["not in","in","is","!=","is not","="],"dataType":"String","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":4,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]},{"indexName":"versionId","fieldName":"fixVersion","displayName":"Fix Version","i18NName":"Fix Version","supportedOperators":["not in","in","is","is not","!=","="],"dataType":"Long","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":2,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["IS_NOT","NOT_EQUALS","IN","NOT_IN","IS","EQUALS"]},{"indexName":"executor","fieldName":"executedBy","displayName":"Executed By","i18NName":"Executed By","supportedOperators":["not in","in","is","!=","is not","="],"dataType":"String","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":5,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]},{"indexName":"executedOn","fieldName":"executionDate","displayName":"Executed On","i18NName":"Executed On","supportedOperators":["<=","not in","in","is","!=","is not","<","=",">",">="],"dataType":"Date","selectionType":"Range","isDefault":true,"visible":true,"orderId":6,"auto":false,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT","LESS_THAN","LESS_THAN_EQUALS","GREATER_THAN","GREATER_THAN_EQUALS"]},{"indexName":"creationDate","fieldName":"creationDate","displayName":"Creation Date","i18NName":"Creation Date","supportedOperators":["<=","not in","in","is","!=","is not","<","=",">",">="],"dataType":"Date","selectionType":"Range","isDefault":false,"visible":false,"orderId":8,"auto":false,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT","LESS_THAN","LESS_THAN_EQUALS","GREATER_THAN","GREATER_THAN_EQUALS"]},{"indexName":"componentId","fieldName":"component","displayName":"Component","i18NName":"Component","supportedOperators":["not in","in","is","!=","is not","="],"dataType":"Long","selectionType":"MultiSelect","isDefault":false,"visible":false,"orderId":9,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]},{"indexName":"issueId","fieldName":"issue","displayName":"Issue","i18NName":"Issue Key","supportedOperators":["<=","not in","in","!=","<","=",">",">="],"dataType":"Long","selectionType":"MultiSelect","isDefault":false,"visible":true,"orderId":10,"auto":false,"isBasicField":false,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","LESS_THAN","LESS_THAN_EQUALS","GREATER_THAN","GREATER_THAN_EQUALS"]},{"indexName":"assignedTo","fieldName":"assignee","displayName":"Assigned To","i18NName":"Assigned To","supportedOperators":["not in","in","is","!=","is not","="],"dataType":"String","selectionType":"MultiSelect","isDefault":true,"visible":true,"orderId":11,"auto":true,"isBasicField":true,"searchable":true,"orderable":true,"supportedOperatorClasses":["EQUALS","NOT_EQUALS","IN","NOT_IN","IS","IS_NOT"]}]


## Get Execution navigation result  [/public/rest/api/1.0/zql/search{?isAdvanced}]
### Get Execution navigation result  [POST]
Returns a full representation of the Execution navigation search result. Some Customers might only see partial responses having the AccountId fields and that expectable. Over the next month all responses should see the AccountId. 
JSON Object details(Request):<table><thead> <tr> <th>Parameter</th><th>Type</th><th>Value</th><th>Required</th> </tr> </thead><tbody><tr> <td>maxRecords</td> <td>Integer</td> <td>20</td> <td>N</td></tr> <tr> <td>offset</td> <td>Integer</td> <td>0</td> <td>N</td> </tr> <tr> <td>zqlQuery</td> <td>String[field=value]</td> <td>fixVersion = \"Version 3.0\"</td> <td>Y</td> </tr> <tr> <td>fields</td> <td>Object</td> <td>{"fixVersion":[{"id":10002,"name":"Version 3.0","projectId":10000,"released":false,"archived":false}]}</td> <td>N</td> </tr> </tbody></table> 


+ Parameters
    + isAdvanced (optional, Boolean) ... isAdvanced of ZQL


+ Request (application/json)

        {"maxRecords":20,"offset":0,"zqlQuery":"fixVersion = \"Version 3.0\"","fields":{"fixVersion":[{"id":10002,"name":"Version 3.0","projectId":10000,"released":false,"archived":false}]}}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"searchObjectList":[{"execution":{"id":"08dcb3dc-4cd5-4864-a880-db7fa3e10b6d","issueId":10071,"versionId":10008,"projectId":10002,"cycleId":"3474de03-d1cf-406c-acf8-80cad6e30d91","orderId":1,"comment":"> Login Failed","executedBy":"admin","executedByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","executedOn":"12-08-2018 02:29:08","modifiedBy":"admin","modifiedByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","createdBy":"admin","createdByAccountId":"557058:01b3a732-1bdb-444a-84bb-bcaa9882a91d","status":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0},"cycleName":"Manual","assignedTo":"admin","defects":[{"id":10063,"key":"QA-48","summary":"Defect 1 Created","status":{"self":"https://qacapture-dev.atlassian.net/rest/api/2/status/10000","name":"To Do","id":10000,"description":"","iconUrl":"https://qacapture-dev.atlassian.net/"},"iconUrl":"https://qacapture-dev.atlassian.net/secure/viewavatar?size=xsmall&avatarId=10303&avatarType=issuetype"}],"stepDefects":[],"executionDefectCount":1,"stepDefectCount":0,"totalDefectCount":1,"creationDate":"12-08-2018 01:42:22","executedByZapi":false,"assignedOn":"12-15-2018 15:53:11","folderId":"a9d23e06-c730-4564-a3d7-e981c87fb997","folderName":"Component","customFieldValues":[{"customFieldId":"4929fd1d-c340-4f00-8948-e910636a70df","value":{"value":"Manual"},"fieldType":"RADIO_BUTTON","disabled":null},{"customFieldId":"90a5a1b1-8d4e-41ec-bc78-7a797776a997","value":{"value":["Stage"]},"fieldType":"MULTI_SELECT","disabled":null}],"plannedExecutionTime":57600,"actualExecutionTime":28800,"workflowStatus":"STARTED","issueIndex":10071,"projectCycleVersionIndex":"10002_3474de03-d1cf-406c-acf8-80cad6e30d91_10008","executionStatusIndex":4,"projectIssueCycleVersionIndex":"10002_10071_3474de03-d1cf-406c-acf8-80cad6e30d91_10008"},"issueKey":"QA-51","issueLabel":"","component":"","issueSummary":"CLONE - asdasdasdasdasd","issueDescription":null,"projectName":"QA - Agiliti","versionName":"V2","priority":"Medium","priorityIconUrl":null,"executedByDisplayName":"Zephyr TM","assigneeType":null,"assignedToDisplayName":"Zephyr TM","testStepBeans":null,"defectsAsString":"QA-48","projectKey":"QA","plannedExecutionTimeFormatted":"2d","actualExecutionTimeFormatted":"1d","executionWorkflowStatus":"STARTED","workflowLoggedTimedIncreasePercentage":"100.00","workflowCompletePercentage":"50.00","versionReleased":false,"customFieldValuesAsString":"IsAutomated:Manual;Environment:[Stage]","executionWorkflowEnabled":true},{"execution":{"id":"0e5fe891-09e5-4fad-af33-07b18f76cea2","issueId":10070,"versionId":-1,"projectId":10001,"cycleId":"-1","orderId":1,"executedBy":"kevin.pham","executedByAccountId":"5a31796f89f6203366cb6258","executedOn":"12-08-2018 09:37:53","modifiedBy":"kevin.pham","modifiedByAccountId":"5a31796f89f6203366cb6258","createdBy":"kevin.pham","createdByAccountId":"5a31796f89f6203366cb6258","status":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"cycleName":"Ad hoc","defects":[],"stepDefects":[],"executionDefectCount":0,"stepDefectCount":0,"totalDefectCount":0,"creationDate":"12-08-2018 09:33:33","executedByZapi":false,"issueIndex":10070,"projectCycleVersionIndex":"10001_-1_-1","executionStatusIndex":1,"projectIssueCycleVersionIndex":"10001_10070_-1_-1"},"issueKey":"ZFJCLOUD-19","issueLabel":"","component":"","issueSummary":"Validate \"Calendar\" is the first application to load","issueDescription":null,"projectName":"ZFJCloud","versionName":"Unscheduled","priority":"Medium","priorityIconUrl":null,"executedByDisplayName":"Kevin Pham (Inactive)","assigneeType":null,"assignedToDisplayName":"","testStepBeans":null,"defectsAsString":"","projectKey":"ZFJCLOUD","plannedExecutionTimeFormatted":null,"actualExecutionTimeFormatted":null,"executionWorkflowStatus":null,"workflowLoggedTimedIncreasePercentage":null,"workflowCompletePercentage":null,"versionReleased":false,"customFieldValuesAsString":"","executionWorkflowEnabled":false}],"summaryList":null,"totalCount":2,"currentOffset":1,"maxAllowed":0,"sortBy":null,"sortOrder":null,"executionStatus":{"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0},"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0}},"stepExecutionStatus":{"1":{"name":"PASS","id":1,"description":"Test was executed and passed successfully.","color":"#75B000","type":0},"2":{"name":"FAIL","id":2,"description":"Test was executed and failed.","color":"#CC3300","type":0},"3":{"name":"WIP","id":3,"description":"Test execution is a work-in-progress.","color":"#F2B000","type":0},"4":{"name":"BLOCKED","id":4,"description":"The test execution of this test was blocked for some reason.","color":"#6693B0","type":0},"-1":{"name":"UNEXECUTED","id":-1,"description":"The test has not yet been executed.","color":"#A0A0A0","type":0}}}


## Get autocomplete values  [/public/rest/api/1.0/zql/autocomplete{?fieldName,fieldValue}]
### Get autocomplete values  [GET]
Returns autocomplete field values for the given field name and field value. <br /> If you don't pass field value. It will return all values otherwise it will return specific field's value as you passed in the parameter. 


+ Parameters
    + fieldName (required,  String) ... fieldName of ZQL
    + fieldValue (required,  String) ... fieldValue of ZQL


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"displayName":"SONY","value":"SONY"},{"displayName":"Samsung","value":"Samsung"}]



# Group ZQLFilter
ZQLFilter Resource

## Get ZQL filter quick search  [/public/rest/api/1.0/zql/filters/quicksearch{?query}]
### Get ZQL filter quick search  [GET]
Returns ZQL filters from quick search by given query. 


+ Parameters
    + query (optional,  String ) ... query of ZQLFilter


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"zql":"executedBy = \"admin\"","createdBy":"মাসুদুর রহমান [Administrator]","name":"Sample Filter","description":"some desc","id":"0001479339613042-725f24aeffff8568-0001","creationDate":1479339613042}]


## Copy ZQL filter  [/public/rest/api/1.0/zql/filter/copy]
### Copy ZQL filter  [PUT]
Copy a ZQL filter for a given ZQL filter id. <br />JSON Object details(Request):<table><thead> <tr> <th>Parameter</th><th>Type</th><th>Value</th><th>Required</th> </tr> </thead><tbody> <tr> <td>id</td> <td>String</td> <td>0001479339613042-725f24aeffff8568-0001</td> <td>Y</td> </tr> <tr> <td>name</td> <td>String</td> <td>COPY- Sample ZQL filter</td> <td>Y</td> </tr> <tr> <td>zql</td> <td>String</td> <td>executedBy = \"admin\"</td> <td>Y</td> </tr> <tr> <td>description</td> <td>String</td> <td>Sample ZQL filter description</td> <td>N</td> </tr> <tr> <td>favorite</td> <td>Boolean</td> <td>true</td> <td>N</td> </tr> <tr> <td>sharePerm</td> <td>String</td> <td>global|private</td> <td>N</td> </tr> </tbody></table>  



+ Request (application/json)

        {"id":"0001479339613042-725f24aeffff8568-0001","name":"Copy of Sample Filter","zql":"executedBy = \"admin\"","favorite":true}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"updatedBy":null,"markedFavoriteBy":["admin"],"description":"some desc","updatedOn":null,"createdOn":1479339760794,"createdByDisplayName":"মাসুদুর রহমান   [Administrator]","zql":"executedBy = \"admin\"","createdBy":"admin","name":"Copy of Sample Filter","tenantId":"jira:7b5790a6-b7e7-4e09-9bd4-c87c05720ff2","id":"0001479339760794-725f24aeffff8568-0001","class":"com.thed.zephyr.connect.model.nosql.ZQLFilter","favorite":true,"sharePerm":"global"}


## Toggle ZQL filter  [/public/rest/api/1.0/zql/filter/{filterId}/favorite]
### Toggle ZQL filter  [PUT]
Toggle ZQL filter for favorite by given filter id. <br />JSON Object details(Request):<table><thead> <tr> <th>Parameter</th><th>Type</th><th>Value</th><th>Required</th> </tr> </thead><tbody> <tr> <td>id</td> <td>String</td> <td>0001479339613042-725f24aeffff8568-0001</td> <td>Y</td> </tr> <tr> <td>favorite</td> <td>Boolean</td> <td>false</td> <td>Y</td> </tr> </tbody></table> 


+ Parameters
    + filterId (required,  String) ... filterId of ZQLFilter


+ Request (application/json)

        {"favorite":false,"id":"0001479339760794-725f24aeffff8568-0001"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"updatedBy":null,"markedFavoriteBy":[],"description":"some desc","updatedOn":null,"createdOn":1479339760794,"createdByDisplayName":"মাসুদুর রহমান   [Administrator]","zql":"executedBy = \"admin\"","createdBy":"admin","name":"Copy of Sample Filter","tenantId":"jira:7b5790a6-b7e7-4e09-9bd4-c87c05720ff2","id":"0001479339760794-725f24aeffff8568-0001","class":"com.thed.zephyr.connect.model.nosql.ZQLFilter","favorite":false,"sharePerm":"global"}


## Create new ZQL filter  [/public/rest/api/1.0/zql/filter]
### Create new ZQL filter  [POST]
Creates a ZQL filter from a JSON representation. <br />JSON Object details(Request):<table><thead> <tr> <th>Parameter</th><th>Type</th><th>Value</th><th>Required</th> </tr> </thead><tbody> <tr> <td>name</td> <td>String</td> <td>Sample ZQL filter</td> <td>Y</td> </tr> <tr> <td>zql</td> <td>String</td> <td>executedBy = \"admin\"</td> <td>Y</td> </tr> <tr> <td>description</td> <td>String</td> <td>Sample ZQL filter description</td> <td>N</td> </tr> <tr> <td>favorite</td> <td>Boolean</td> <td>true</td> <td>N</td> </tr> <tr> <td>sharePerm</td> <td>String</td> <td>global|private</td> <td>N</td> </tr> </tbody></table> 



+ Request (application/json)

        {"zql":"executedBy = \"admin\"","name":"Sample Filter","description":"some desc","favorite":true,"sharePerm":"global"}


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"updatedBy":null,"markedFavoriteBy":["admin"],"description":"some desc","updatedOn":null,"createdOn":1479339613042,"createdByDisplayName":"Zephyr Admin   [Administrator]","zql":"executedBy = \"admin\"","executedByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","createdBy":"admin","createdByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","name":"Sample Filter","tenantId":"jira:7b5790a6-b7e7-4e09-9bd4-c87c05720ff2","id":"0001479339613042-725f24aeffff8568-0001","class":"com.thed.zephyr.connect.model.nosql.ZQLFilter","favorite":true,"sharePerm":"global"}


## Get ZQL filters by criteria  [/public/rest/api/1.0/zql/filters{?maxRecords,offset,fav,byUser}]
### Get ZQL filters by criteria  [GET]
Returns ZQL filters by given specific criteria. 


+ Parameters
    + maxRecords (optional,  Integer ) ... maxRecords of ZQLFilter
    + offset (optional, Integer ) ... offset of ZQLFilter
    + fav (optional,  Boolean ) ... fav of ZQLFilter
    + byUser (optional,  Boolean ) ... byUser of ZQLFilter


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"description":"some desc","totalCount":1,"creationDate":1479339613042,"currentIndex":1,"zql":"executedBy = \"admin\"","createdBy":"মাসুদুর রহমান   [Administrator]","popularity":1,"name":"Sample Filter","maxResultAllowed":10,"executionCount":1,"id":"0001479339613042-725f24aeffff8568-0001","linksNew":[1],"sharePerm":"global","favorite":true}]


## Get ZQL filter  [/public/rest/api/1.0/zql/filter/{filterId}]
### Get ZQL filter  [GET]
 Get ZQL filter by filterId  


+ Parameters
    + filterId (required,  String) ... filterId of ZQLFilter


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"updatedBy":null,"updatedByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","markedFavoriteBy":["admin"],"description":"","updatedOn":null,"createdOn":1479340051087,"createdByDisplayName":"Zephyr Admin [Administrator]","zql":"fixVersion = Unscheduled","createdBy":"admin","createdByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","name":"Sample Filter 2","tenantId":"jira:7b5790a6-b7e7-4e09-9bd4-c87c05720ff2","id":"0001479340051087-725f24aeffff8568-0001","class":"com.thed.zephyr.connect.model.nosql.ZQLFilter","favorite":true,"sharePerm":"global"}

### Update ZQL filter  [PUT]
Update a ZQL filter by given filterId. The ZQL filter can either be updated by setting explicit the field value(s) or by using an operation to change the field value. <br />JSON Object details(Request):<table><thead> <tr> <th>Parameter</th><th>Type</th><th>Value</th><th>Required</th> </tr> </thead><tbody> <tr> <td>id</td> <td>String</td> <td>0001479339613042-725f24aeffff8568-0001</td> <td>Y</td> </tr> <tr> <td>name</td> <td>String</td> <td>UPDATED- Sample ZQL filter</td> <td>Y</td> </tr> <tr> <td>zql</td> <td>String</td> <td>executedBy = \"admin\"</td> <td>Y</td> </tr> <tr> <td>description</td> <td>String</td> <td>Sample ZQL filter description</td> <td>N</td> </tr> <tr> <td>favorite</td> <td>Boolean</td> <td>true</td> <td>N</td> </tr> <tr> <td>sharePerm</td> <td>String</td> <td>global|private</td> <td>N</td> </tr> </tbody></table> 


+ Parameters
    + filterId (required,  String) ... filterId of ZQLFilter


+ Request (application/json)

        {"favorite":true,"id":"0001479339613042-725f24aeffff8568-0001","description":"some desc","name":"Sample Filter Updated","sharePerm":"private","zql":"executedBy = \"admin\""}



    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"updatedBy":"admin","updatedByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","markedFavoriteBy":["admin"],"description":"some desc","updatedOn":1479339931575,"createdOn":1479339613042,"createdByDisplayName":"Zephyr Admin [Administrator]","zql":"executedBy = \"admin\"","executedByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","createdBy":"admin","createdByAccountId":"123456:1234abcd-1234-abcd-1234-1234abcd1234","name":"Sample Filter Updated","tenantId":"jira:7b5790a6-b7e7-4e09-9bd4-c87c05720ff2","id":"0001479339613042-725f24aeffff8568-0001","class":"com.thed.zephyr.connect.model.nosql.ZQLFilter","favorite":true,"sharePerm":"private"}


### Delete ZQL filter  [DELETE]
Delete a ZQL filter by given filter id 


+ Parameters
    + filterId (required,  String) ... filterId of ZQLFilter


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        {"message":"zqlfilter 0001481598081184-242ac112-0001 successfully deleted","timestamp":"12-13-2016"}


## Search ZQL filter [/public/rest/api/1.0/zql/filters/search{?owner,offset,size,name,sharePerm}]
### Search ZQL filter [GET]
Returns ZQL filters by given filter name. 


+ Parameters
    + owner (optional,  String ) ... owner of ZQLFilter
    + offset (optional, Integer) ... offset of ZQLFilter
    + size (optional, Integer) ... size of ZQLFilter
    + name (optional,  String ) ... name of ZQLFilter
    + sharePerm (optional,  String ) ... sharePerm of ZQLFilter


+ Request (application/json)

        


    + Headers

                Authorization: JWT eyJhbGciOiJIUzI1NiI...
                zapiAccessKey: amlyYTo3YjU3OTBhN...


+ Response 200 (application/json)

        [{"description":"","totalCount":2,"creationDate":1479340041189,"currentIndex":1,"zql":"fixVersion = Unscheduled","createdBy":"মাসুদুর রহমান   [Administrator]","popularity":1,"name":"Sample Filter","maxResultAllowed":20,"executionCount":1,"id":"0001479340041189-725f24aeffff8568-0001","linksNew":[1],"sharePerm":"global","favorite":true},{"description":"","totalCount":2,"creationDate":1479340051087,"currentIndex":1,"zql":"fixVersion = Unscheduled","createdBy":"মাসুদুর রহমান   [Administrator]","popularity":1,"name":"Sample Filter 2","maxResultAllowed":20,"executionCount":1,"id":"0001479340051087-725f24aeffff8568-0001","linksNew":[1],"sharePerm":"global","favorite":true}]

